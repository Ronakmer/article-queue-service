2025-06-06 10:43:44 | INFO | PID:24012 | Queue 'article-output-queue' created successfully
2025-06-06 10:44:26 | INFO | PID:29128 | Starting worker url_rewriter_para_response_worker for queue article-input-queue
2025-06-06 10:44:26 | INFO | PID:29128 | Created new channel
2025-06-06 10:44:26 | INFO | PID:29128 | Declared queue: article-input-queue
2025-06-06 10:44:26 | INFO | PID:29128 | Available workers: ['testworker', 'url_rewriter_para_response_worker', 'url_rewriter_para_worker']
2025-06-06 10:44:26 | INFO | PID:29128 | Found worker class: UrlRewriterParallelWorker
2025-06-06 10:44:27 | WARNING | PID:29128 | Detected localhost connection - disabling SSL verification for development
2025-06-06 10:44:27 | WARNING | PID:29128 | ⚠️  SSL verification is disabled - DO NOT use this in production!
2025-06-06 10:44:27 | INFO | PID:29128 | Worker instance created
2025-06-06 10:44:27 | INFO | PID:29128 | Registered worker process 29128 in registry
2025-06-06 10:44:27 | INFO | PID:29128 | Starting consuming on article-input-queue
2025-06-06 10:44:27 | INFO | PID:29128 | Started url_rewriter_para_response_worker on queue: article-input-queue
2025-06-06 10:44:27 | INFO | PID:29128 | Started url_rewriter_para_response_worker with PID: 29128, queue: article-input-queue
2025-06-06 10:44:32 | WARNING | PID:29128 | No open connection/channel: connecting...
2025-06-06 10:44:32 | INFO | PID:29128 | Successfully connected on attempt 1
2025-06-06 10:44:32 | INFO | PID:29128 | Consumer registered on queue: article-input-queue
2025-06-06 10:44:32 | INFO | PID:29128 | Starting consuming on article-input-queue
2025-06-06 10:44:32 | INFO | PID:29128 | Processing message from queue: article-input-queue
2025-06-06 10:44:32 | INFO | PID:29128 | Processing message: {'message': {'article_slug_id': '4e2e5358-01ce-4e2e-8d5e-7d8c4c6bb5dc', 'url': 'https://topmovierankings.com/web-series/demands-for-side-hustlers-season-2', 'wp_status': 'draft', 'article_status': 'initiate', 'wp_schedule_time': None, 'is_category_selected_by_ai': True, 'is_category_generated_by_ai': True, 'is_tag_selected_by_ai': True, 'is_tag_generated_by_ai': True, 'is_author_selected_by_ai': True, 'is_meta_description_generated_by_ai': True, 'is_meta_keyword_generated_by_ai': True, 'is_meta_title_generated_by_ai': True, 'is_internal_links_generated_by_ai': True, 'is_external_links_generated_by_ai': True, 'wp_author': None, 'wp_category': [], 'wp_tag': [], 'prompt': {'slug_id': 'b8ad4e71-328d-40c5-9118-ca51496bf390', 'name': 'URL Rewriter By Para', 'ai_rate_model': 'deepseek/deepseek_v3', 'prompt_data': {'system_rephrase': "I need you to make this content more engaging for a user, no fluff, remove cringe, increase the humour levels where appropriate but not throughout the content, increase explanations where relevant based on your most up to date understanding of the parent and primary topics.\n\nFocus on the emotion, vocabulary, tone and optimization of the article, break standard English rules via idioms, slang and even a regional tone if necessary, remove overly technical terms or jargon. Improve the article for a user to engage and buy, increase active tone, add personal touch, personal stories, specific use cases and experience whilst still maintaining standards related to the Google algorithm, helpful content system and product reviews system.\n\nFocus on sentence structure that makes it easy to semantically connect entities, then focus on choosing the most human entity and smooth transitions between topics, sentences and paragraphs.\nReWrite for and as a human, use natural, conversational dialogue and use stemming, lemmatization, n-grams and zipf's law.", 'title_rephrase': 'Rewrite the title:', 'heading_rephrase': 'Rewrite the heading:', 'para_rephrase': 'Rewrite the para:', 'table_rephrase': 'Rewrite the table:', 'blockquote_rephrase': 'Rewrite the Blockquote:', 'list_rephrase': 'Rewrite the list:'}, 'wordpress_prompt_json_data': {'supportive_prompt_WP_TAG_id': '69c7f5fe-2a33-4d0b-a413-76196766c726', 'supportive_prompt_META_TITLE_id': 'cae4fd8b-ecd3-440c-9522-8f7df0de681a', 'supportive_prompt_WP_AUTHORS_id': 'fbd19b15-80d4-4b50-a229-0b8153d156c8', 'supportive_prompt_META_KEYWORDS_id': '764f272b-d420-4e1e-a08e-d7cb12c54d10', 'supportive_prompt_WP_CATEGORIES_id': 'c05fc7c5-112d-413a-b0f1-48d7d6a0a78b', 'supportive_prompt_META_DESCRIPTION_id': 'f15e34a7-2cb1-484d-b230-28ad8820e26a'}, 'article_type': {'slug_id': 'c82a41f0-9d99-4bc7-bf68-580d4b144d16', 'category': 'url', 'article_category': 'rephrase', 'title': 'Url Rewriter By Para', 'description': 'This prompt helps rewriting the paragraph', 'article_type_field': [{'slug_id': '8dbd1c5d-5246-4f50-8ee6-a1e9fb9092fc', 'label': 'rewrite_para', 'name': 'textbox', 'type': 'text', 'placeholder': 'Enter Rewriting Paragraph Text', 'required': True}]}}, 'variables': [{'slug_id': 'f6931042-0e67-4d1f-9d9c-70fec97c02a6', 'name': 'generated_article_title', 'value': 'This is article Title.', 'required': True}, {'slug_id': '6e43885f-b444-46c8-aae1-22e2e25c1221', 'name': 'generated_article_content', 'value': 'This is article Content.', 'required': True}, {'slug_id': '93f613da-18c5-4f4e-b461-500cc9fd5374', 'name': 'source_article_title', 'value': 'This is Source Article Title.', 'required': True}, {'slug_id': '7049976d-0822-4a3e-93bd-2b099f2f4dda', 'name': 'source_article_content', 'value': 'This is source article content.', 'required': True}, {'slug_id': '7b7b68f4-b2e8-462a-a697-6c47ca0fa15b', 'name': 'wp_all_categories', 'value': '[{"wp_cat_id":1, "name":"xx", "description": "this is description"}, {"wp_cat_id":2, "name":"xy", "description": "this is description"}]', 'required': True}, {'slug_id': '6812b942-9937-4337-9e65-f12a0446b011', 'name': 'wp_all_tags', 'value': '[{"wp_tag_id":1, "name":"xx", "description": "this is description"}, {"wp_tag_id":2, "name":"xy", "description": "this is description"}]', 'required': True}, {'slug_id': '24cbd6dc-6cbb-4ef1-8f80-273f6aecdc1a', 'name': 'output', 'value': '{"wp_cat_id":1, "name":"xx"}', 'required': True}], 'domain': {'slug_id': '25fca9b7-d9a3-42b9-be7b-eadf062716d6', 'name': 'ronak-wolf.botxbyte.com', 'permalinks': '/%year%/%hour%/%postname%/'}, 'workspace': {'slug_id': '57dc902e-4449-4083-9b56-000000000004', 'name': 'bxb-1'}}, 'timestamp': '2025-05-31T12:50:03.358533', 'message_id': '38b9b306-39e7-45c4-bf2f-1f99df6428bb'}
2025-06-06 10:44:32 | INFO | PID:29128 | xxxxxxxxxxxxxxxxxxxxxxxxx url_rewriter_para_response_worker xxxxxxxxxxxxxxxxxxxxxxxxx
2025-06-06 10:44:32 | INFO | PID:29128 | Message processed in 0.01 seconds
2025-06-06 10:44:32 | INFO | PID:29128 | Message acknowledged
2025-06-06 10:44:35 | INFO | PID:21980 | Starting worker url_rewriter_para_response_worker for queue article-input-queue
2025-06-06 10:44:35 | INFO | PID:21980 | Created new channel
2025-06-06 10:44:35 | INFO | PID:21980 | Declared queue: article-input-queue
2025-06-06 10:44:35 | INFO | PID:21980 | Available workers: ['testworker', 'url_rewriter_para_response_worker', 'url_rewriter_para_worker']
2025-06-06 10:44:35 | INFO | PID:21980 | Found worker class: UrlRewriterParallelWorker
2025-06-06 10:44:36 | WARNING | PID:21980 | Detected localhost connection - disabling SSL verification for development
2025-06-06 10:44:36 | WARNING | PID:21980 | ⚠️  SSL verification is disabled - DO NOT use this in production!
2025-06-06 10:44:36 | INFO | PID:21980 | Worker instance created
2025-06-06 10:44:36 | INFO | PID:21980 | Registered worker process 21980 in registry
2025-06-06 10:44:36 | INFO | PID:21980 | Starting consuming on article-input-queue
2025-06-06 10:44:36 | INFO | PID:21980 | Started url_rewriter_para_response_worker on queue: article-input-queue
2025-06-06 10:44:36 | INFO | PID:21980 | Started url_rewriter_para_response_worker with PID: 21980, queue: article-input-queue
2025-06-06 10:44:37 | WARNING | PID:29128 | No open connection/channel: connecting...
2025-06-06 10:44:37 | INFO | PID:29128 | Successfully connected on attempt 1
2025-06-06 10:44:37 | INFO | PID:29128 | Consumer registered on queue: article-input-queue
2025-06-06 10:44:37 | INFO | PID:29128 | Starting consuming on article-input-queue
2025-06-06 10:44:37 | INFO | PID:29128 | Processing message from queue: article-input-queue
2025-06-06 10:44:37 | INFO | PID:29128 | Processing message: {'message': {'article_slug_id': '4e2e5358-01ce-4e2e-8d5e-7d8c4c6bb5dc', 'url': 'https://topmovierankings.com/web-series/demands-for-side-hustlers-season-2', 'wp_status': 'draft', 'article_status': 'initiate', 'wp_schedule_time': None, 'is_category_selected_by_ai': True, 'is_category_generated_by_ai': True, 'is_tag_selected_by_ai': True, 'is_tag_generated_by_ai': True, 'is_author_selected_by_ai': True, 'is_meta_description_generated_by_ai': True, 'is_meta_keyword_generated_by_ai': True, 'is_meta_title_generated_by_ai': True, 'is_internal_links_generated_by_ai': True, 'is_external_links_generated_by_ai': True, 'wp_author': None, 'wp_category': [], 'wp_tag': [], 'prompt': {'slug_id': 'b8ad4e71-328d-40c5-9118-ca51496bf390', 'name': 'URL Rewriter By Para', 'ai_rate_model': 'deepseek/deepseek_v3', 'prompt_data': {'system_rephrase': "I need you to make this content more engaging for a user, no fluff, remove cringe, increase the humour levels where appropriate but not throughout the content, increase explanations where relevant based on your most up to date understanding of the parent and primary topics.\n\nFocus on the emotion, vocabulary, tone and optimization of the article, break standard English rules via idioms, slang and even a regional tone if necessary, remove overly technical terms or jargon. Improve the article for a user to engage and buy, increase active tone, add personal touch, personal stories, specific use cases and experience whilst still maintaining standards related to the Google algorithm, helpful content system and product reviews system.\n\nFocus on sentence structure that makes it easy to semantically connect entities, then focus on choosing the most human entity and smooth transitions between topics, sentences and paragraphs.\nReWrite for and as a human, use natural, conversational dialogue and use stemming, lemmatization, n-grams and zipf's law.", 'title_rephrase': 'Rewrite the title:', 'heading_rephrase': 'Rewrite the heading:', 'para_rephrase': 'Rewrite the para:', 'table_rephrase': 'Rewrite the table:', 'blockquote_rephrase': 'Rewrite the Blockquote:', 'list_rephrase': 'Rewrite the list:'}, 'wordpress_prompt_json_data': {'supportive_prompt_WP_TAG_id': '69c7f5fe-2a33-4d0b-a413-76196766c726', 'supportive_prompt_META_TITLE_id': 'cae4fd8b-ecd3-440c-9522-8f7df0de681a', 'supportive_prompt_WP_AUTHORS_id': 'fbd19b15-80d4-4b50-a229-0b8153d156c8', 'supportive_prompt_META_KEYWORDS_id': '764f272b-d420-4e1e-a08e-d7cb12c54d10', 'supportive_prompt_WP_CATEGORIES_id': 'c05fc7c5-112d-413a-b0f1-48d7d6a0a78b', 'supportive_prompt_META_DESCRIPTION_id': 'f15e34a7-2cb1-484d-b230-28ad8820e26a'}, 'article_type': {'slug_id': 'c82a41f0-9d99-4bc7-bf68-580d4b144d16', 'category': 'url', 'article_category': 'rephrase', 'title': 'Url Rewriter By Para', 'description': 'This prompt helps rewriting the paragraph', 'article_type_field': [{'slug_id': '8dbd1c5d-5246-4f50-8ee6-a1e9fb9092fc', 'label': 'rewrite_para', 'name': 'textbox', 'type': 'text', 'placeholder': 'Enter Rewriting Paragraph Text', 'required': True}]}}, 'variables': [{'slug_id': 'f6931042-0e67-4d1f-9d9c-70fec97c02a6', 'name': 'generated_article_title', 'value': 'This is article Title.', 'required': True}, {'slug_id': '6e43885f-b444-46c8-aae1-22e2e25c1221', 'name': 'generated_article_content', 'value': 'This is article Content.', 'required': True}, {'slug_id': '93f613da-18c5-4f4e-b461-500cc9fd5374', 'name': 'source_article_title', 'value': 'This is Source Article Title.', 'required': True}, {'slug_id': '7049976d-0822-4a3e-93bd-2b099f2f4dda', 'name': 'source_article_content', 'value': 'This is source article content.', 'required': True}, {'slug_id': '7b7b68f4-b2e8-462a-a697-6c47ca0fa15b', 'name': 'wp_all_categories', 'value': '[{"wp_cat_id":1, "name":"xx", "description": "this is description"}, {"wp_cat_id":2, "name":"xy", "description": "this is description"}]', 'required': True}, {'slug_id': '6812b942-9937-4337-9e65-f12a0446b011', 'name': 'wp_all_tags', 'value': '[{"wp_tag_id":1, "name":"xx", "description": "this is description"}, {"wp_tag_id":2, "name":"xy", "description": "this is description"}]', 'required': True}, {'slug_id': '24cbd6dc-6cbb-4ef1-8f80-273f6aecdc1a', 'name': 'output', 'value': '{"wp_cat_id":1, "name":"xx"}', 'required': True}], 'domain': {'slug_id': '25fca9b7-d9a3-42b9-be7b-eadf062716d6', 'name': 'ronak-wolf.botxbyte.com', 'permalinks': '/%year%/%hour%/%postname%/'}, 'workspace': {'slug_id': '57dc902e-4449-4083-9b56-000000000004', 'name': 'bxb-1'}}, 'timestamp': '2025-05-31T12:52:35.616441', 'message_id': '332ceac9-742b-44e1-b73c-f0708316eb9d'}
2025-06-06 10:44:37 | INFO | PID:29128 | xxxxxxxxxxxxxxxxxxxxxxxxx url_rewriter_para_response_worker xxxxxxxxxxxxxxxxxxxxxxxxx
2025-06-06 10:44:37 | INFO | PID:29128 | Message processed in 0.01 seconds
2025-06-06 10:44:37 | INFO | PID:29128 | Message acknowledged
2025-06-06 10:44:39 | ERROR | PID:29128 | Worker url_rewriter_para_response_worker failed to register with RabbitMQ
2025-06-06 10:44:41 | WARNING | PID:21980 | No open connection/channel: connecting...
2025-06-06 10:44:41 | INFO | PID:21980 | Successfully connected on attempt 1
2025-06-06 10:44:41 | INFO | PID:21980 | Consumer registered on queue: article-input-queue
2025-06-06 10:44:41 | INFO | PID:21980 | Starting consuming on article-input-queue
2025-06-06 10:44:41 | INFO | PID:21980 | Processing message from queue: article-input-queue
2025-06-06 10:44:41 | INFO | PID:21980 | Processing message: {'message': {'article_slug_id': '4e2e5358-01ce-4e2e-8d5e-7d8c4c6bb5dc', 'url': 'https://topmovierankings.com/web-series/demands-for-side-hustlers-season-2', 'wp_status': 'draft', 'article_status': 'initiate', 'wp_schedule_time': None, 'is_category_selected_by_ai': True, 'is_category_generated_by_ai': True, 'is_tag_selected_by_ai': True, 'is_tag_generated_by_ai': True, 'is_author_selected_by_ai': True, 'is_meta_description_generated_by_ai': True, 'is_meta_keyword_generated_by_ai': True, 'is_meta_title_generated_by_ai': True, 'is_internal_links_generated_by_ai': True, 'is_external_links_generated_by_ai': True, 'wp_author': None, 'wp_category': [], 'wp_tag': [], 'prompt': {'slug_id': 'b8ad4e71-328d-40c5-9118-ca51496bf390', 'name': 'URL Rewriter By Para', 'ai_rate_model': 'deepseek/deepseek_v3', 'prompt_data': {'system_rephrase': "I need you to make this content more engaging for a user, no fluff, remove cringe, increase the humour levels where appropriate but not throughout the content, increase explanations where relevant based on your most up to date understanding of the parent and primary topics.\n\nFocus on the emotion, vocabulary, tone and optimization of the article, break standard English rules via idioms, slang and even a regional tone if necessary, remove overly technical terms or jargon. Improve the article for a user to engage and buy, increase active tone, add personal touch, personal stories, specific use cases and experience whilst still maintaining standards related to the Google algorithm, helpful content system and product reviews system.\n\nFocus on sentence structure that makes it easy to semantically connect entities, then focus on choosing the most human entity and smooth transitions between topics, sentences and paragraphs.\nReWrite for and as a human, use natural, conversational dialogue and use stemming, lemmatization, n-grams and zipf's law.", 'title_rephrase': 'Rewrite the title:', 'heading_rephrase': 'Rewrite the heading:', 'para_rephrase': 'Rewrite the para:', 'table_rephrase': 'Rewrite the table:', 'blockquote_rephrase': 'Rewrite the Blockquote:', 'list_rephrase': 'Rewrite the list:'}, 'wordpress_prompt_json_data': {'supportive_prompt_WP_TAG_id': '69c7f5fe-2a33-4d0b-a413-76196766c726', 'supportive_prompt_META_TITLE_id': 'cae4fd8b-ecd3-440c-9522-8f7df0de681a', 'supportive_prompt_WP_AUTHORS_id': 'fbd19b15-80d4-4b50-a229-0b8153d156c8', 'supportive_prompt_META_KEYWORDS_id': '764f272b-d420-4e1e-a08e-d7cb12c54d10', 'supportive_prompt_WP_CATEGORIES_id': 'c05fc7c5-112d-413a-b0f1-48d7d6a0a78b', 'supportive_prompt_META_DESCRIPTION_id': 'f15e34a7-2cb1-484d-b230-28ad8820e26a'}, 'article_type': {'slug_id': 'c82a41f0-9d99-4bc7-bf68-580d4b144d16', 'category': 'url', 'article_category': 'rephrase', 'title': 'Url Rewriter By Para', 'description': 'This prompt helps rewriting the paragraph', 'article_type_field': [{'slug_id': '8dbd1c5d-5246-4f50-8ee6-a1e9fb9092fc', 'label': 'rewrite_para', 'name': 'textbox', 'type': 'text', 'placeholder': 'Enter Rewriting Paragraph Text', 'required': True}]}}, 'variables': [{'slug_id': 'f6931042-0e67-4d1f-9d9c-70fec97c02a6', 'name': 'generated_article_title', 'value': 'This is article Title.', 'required': True}, {'slug_id': '6e43885f-b444-46c8-aae1-22e2e25c1221', 'name': 'generated_article_content', 'value': 'This is article Content.', 'required': True}, {'slug_id': '93f613da-18c5-4f4e-b461-500cc9fd5374', 'name': 'source_article_title', 'value': 'This is Source Article Title.', 'required': True}, {'slug_id': '7049976d-0822-4a3e-93bd-2b099f2f4dda', 'name': 'source_article_content', 'value': 'This is source article content.', 'required': True}, {'slug_id': '7b7b68f4-b2e8-462a-a697-6c47ca0fa15b', 'name': 'wp_all_categories', 'value': '[{"wp_cat_id":1, "name":"xx", "description": "this is description"}, {"wp_cat_id":2, "name":"xy", "description": "this is description"}]', 'required': True}, {'slug_id': '6812b942-9937-4337-9e65-f12a0446b011', 'name': 'wp_all_tags', 'value': '[{"wp_tag_id":1, "name":"xx", "description": "this is description"}, {"wp_tag_id":2, "name":"xy", "description": "this is description"}]', 'required': True}, {'slug_id': '24cbd6dc-6cbb-4ef1-8f80-273f6aecdc1a', 'name': 'output', 'value': '{"wp_cat_id":1, "name":"xx"}', 'required': True}], 'domain': {'slug_id': '25fca9b7-d9a3-42b9-be7b-eadf062716d6', 'name': 'ronak-wolf.botxbyte.com', 'permalinks': '/%year%/%hour%/%postname%/'}, 'workspace': {'slug_id': '57dc902e-4449-4083-9b56-000000000004', 'name': 'bxb-1'}}, 'timestamp': '2025-05-31T13:03:14.503631', 'message_id': 'db3e203e-ea80-4b02-9703-851885131dc4'}
2025-06-06 10:44:41 | INFO | PID:21980 | xxxxxxxxxxxxxxxxxxxxxxxxx url_rewriter_para_response_worker xxxxxxxxxxxxxxxxxxxxxxxxx
2025-06-06 10:44:41 | INFO | PID:21980 | Message processed in 0.01 seconds
2025-06-06 10:44:41 | INFO | PID:21980 | Message acknowledged
2025-06-06 10:44:42 | INFO | PID:29128 | Stopped consumer-article-input-queue-url_rewriter_para_response_worker
2025-06-06 10:44:45 | INFO | PID:22144 | Starting worker url_rewriter_para_response_worker for queue article-input-queue
2025-06-06 10:44:45 | INFO | PID:22144 | Created new channel
2025-06-06 10:44:45 | INFO | PID:22144 | Declared queue: article-input-queue
2025-06-06 10:44:46 | INFO | PID:22144 | Available workers: ['testworker', 'url_rewriter_para_response_worker', 'url_rewriter_para_worker']
2025-06-06 10:44:46 | INFO | PID:22144 | Found worker class: UrlRewriterParallelWorker
2025-06-06 10:44:46 | WARNING | PID:22144 | Detected localhost connection - disabling SSL verification for development
2025-06-06 10:44:46 | WARNING | PID:22144 | ⚠️  SSL verification is disabled - DO NOT use this in production!
2025-06-06 10:44:46 | INFO | PID:22144 | Worker instance created
2025-06-06 10:44:46 | INFO | PID:22144 | Registered worker process 22144 in registry
2025-06-06 10:44:46 | INFO | PID:22144 | Starting consuming on article-input-queue
2025-06-06 10:44:46 | WARNING | PID:21980 | No open connection/channel: connecting...
2025-06-06 10:44:46 | INFO | PID:21980 | Successfully connected on attempt 1
2025-06-06 10:44:46 | INFO | PID:21980 | Consumer registered on queue: article-input-queue
2025-06-06 10:44:46 | INFO | PID:21980 | Starting consuming on article-input-queue
2025-06-06 10:44:46 | INFO | PID:21980 | Processing message from queue: article-input-queue
2025-06-06 10:44:46 | INFO | PID:21980 | Processing message: {'message': {'article_slug_id': '4e2e5358-01ce-4e2e-8d5e-7d8c4c6bb5dc', 'url': 'https://topmovierankings.com/web-series/demands-for-side-hustlers-season-2', 'wp_status': 'draft', 'article_status': 'initiate', 'wp_schedule_time': None, 'is_category_selected_by_ai': True, 'is_category_generated_by_ai': True, 'is_tag_selected_by_ai': True, 'is_tag_generated_by_ai': True, 'is_author_selected_by_ai': True, 'is_meta_description_generated_by_ai': True, 'is_meta_keyword_generated_by_ai': True, 'is_meta_title_generated_by_ai': True, 'is_internal_links_generated_by_ai': True, 'is_external_links_generated_by_ai': True, 'wp_author': None, 'wp_category': [], 'wp_tag': [], 'prompt': {'slug_id': 'b8ad4e71-328d-40c5-9118-ca51496bf390', 'name': 'URL Rewriter By Para', 'ai_rate_model': 'deepseek/deepseek_v3', 'prompt_data': {'system_rephrase': "I need you to make this content more engaging for a user, no fluff, remove cringe, increase the humour levels where appropriate but not throughout the content, increase explanations where relevant based on your most up to date understanding of the parent and primary topics.\n\nFocus on the emotion, vocabulary, tone and optimization of the article, break standard English rules via idioms, slang and even a regional tone if necessary, remove overly technical terms or jargon. Improve the article for a user to engage and buy, increase active tone, add personal touch, personal stories, specific use cases and experience whilst still maintaining standards related to the Google algorithm, helpful content system and product reviews system.\n\nFocus on sentence structure that makes it easy to semantically connect entities, then focus on choosing the most human entity and smooth transitions between topics, sentences and paragraphs.\nReWrite for and as a human, use natural, conversational dialogue and use stemming, lemmatization, n-grams and zipf's law.", 'title_rephrase': 'Rewrite the title:', 'heading_rephrase': 'Rewrite the heading:', 'para_rephrase': 'Rewrite the para:', 'table_rephrase': 'Rewrite the table:', 'blockquote_rephrase': 'Rewrite the Blockquote:', 'list_rephrase': 'Rewrite the list:'}, 'wordpress_prompt_json_data': {'supportive_prompt_WP_TAG_id': '69c7f5fe-2a33-4d0b-a413-76196766c726', 'supportive_prompt_META_TITLE_id': 'cae4fd8b-ecd3-440c-9522-8f7df0de681a', 'supportive_prompt_WP_AUTHORS_id': 'fbd19b15-80d4-4b50-a229-0b8153d156c8', 'supportive_prompt_META_KEYWORDS_id': '764f272b-d420-4e1e-a08e-d7cb12c54d10', 'supportive_prompt_WP_CATEGORIES_id': 'c05fc7c5-112d-413a-b0f1-48d7d6a0a78b', 'supportive_prompt_META_DESCRIPTION_id': 'f15e34a7-2cb1-484d-b230-28ad8820e26a'}, 'article_type': {'slug_id': 'c82a41f0-9d99-4bc7-bf68-580d4b144d16', 'category': 'url', 'article_category': 'rephrase', 'title': 'Url Rewriter By Para', 'description': 'This prompt helps rewriting the paragraph', 'article_type_field': [{'slug_id': '8dbd1c5d-5246-4f50-8ee6-a1e9fb9092fc', 'label': 'rewrite_para', 'name': 'textbox', 'type': 'text', 'placeholder': 'Enter Rewriting Paragraph Text', 'required': True}]}}, 'variables': [{'slug_id': 'f6931042-0e67-4d1f-9d9c-70fec97c02a6', 'name': 'generated_article_title', 'value': 'This is article Title.', 'required': True}, {'slug_id': '6e43885f-b444-46c8-aae1-22e2e25c1221', 'name': 'generated_article_content', 'value': 'This is article Content.', 'required': True}, {'slug_id': '93f613da-18c5-4f4e-b461-500cc9fd5374', 'name': 'source_article_title', 'value': 'This is Source Article Title.', 'required': True}, {'slug_id': '7049976d-0822-4a3e-93bd-2b099f2f4dda', 'name': 'source_article_content', 'value': 'This is source article content.', 'required': True}, {'slug_id': '7b7b68f4-b2e8-462a-a697-6c47ca0fa15b', 'name': 'wp_all_categories', 'value': '[{"wp_cat_id":1, "name":"xx", "description": "this is description"}, {"wp_cat_id":2, "name":"xy", "description": "this is description"}]', 'required': True}, {'slug_id': '6812b942-9937-4337-9e65-f12a0446b011', 'name': 'wp_all_tags', 'value': '[{"wp_tag_id":1, "name":"xx", "description": "this is description"}, {"wp_tag_id":2, "name":"xy", "description": "this is description"}]', 'required': True}, {'slug_id': '24cbd6dc-6cbb-4ef1-8f80-273f6aecdc1a', 'name': 'output', 'value': '{"wp_cat_id":1, "name":"xx"}', 'required': True}], 'domain': {'slug_id': '25fca9b7-d9a3-42b9-be7b-eadf062716d6', 'name': 'ronak-wolf.botxbyte.com', 'permalinks': '/%year%/%hour%/%postname%/'}, 'workspace': {'slug_id': '57dc902e-4449-4083-9b56-000000000004', 'name': 'bxb-1'}}, 'timestamp': '2025-05-31T13:50:25.960212', 'message_id': '8869f511-8247-4645-83d8-16985d0bafcd'}
2025-06-06 10:44:46 | INFO | PID:21980 | xxxxxxxxxxxxxxxxxxxxxxxxx url_rewriter_para_response_worker xxxxxxxxxxxxxxxxxxxxxxxxx
2025-06-06 10:44:46 | INFO | PID:21980 | Message processed in 0.01 seconds
2025-06-06 10:44:46 | INFO | PID:21980 | Message acknowledged
2025-06-06 10:44:46 | INFO | PID:21980 | Processing message from queue: article-input-queue
2025-06-06 10:44:46 | INFO | PID:21980 | Processing message: {'message': {'article_slug_id': '4e2e5358-01ce-4e2e-8d5e-7d8c4c6bb5dc', 'url': 'https://topmovierankings.com/web-series/demands-for-side-hustlers-season-2', 'wp_status': 'draft', 'article_status': 'initiate', 'wp_schedule_time': None, 'is_category_selected_by_ai': True, 'is_category_generated_by_ai': True, 'is_tag_selected_by_ai': True, 'is_tag_generated_by_ai': True, 'is_author_selected_by_ai': True, 'is_meta_description_generated_by_ai': True, 'is_meta_keyword_generated_by_ai': True, 'is_meta_title_generated_by_ai': True, 'is_internal_links_generated_by_ai': True, 'is_external_links_generated_by_ai': True, 'wp_author': None, 'wp_category': [], 'wp_tag': [], 'prompt': {'slug_id': 'b8ad4e71-328d-40c5-9118-ca51496bf390', 'name': 'URL Rewriter By Para', 'ai_rate_model': 'deepseek/deepseek_v3', 'prompt_data': {'system_rephrase': "I need you to make this content more engaging for a user, no fluff, remove cringe, increase the humour levels where appropriate but not throughout the content, increase explanations where relevant based on your most up to date understanding of the parent and primary topics.\n\nFocus on the emotion, vocabulary, tone and optimization of the article, break standard English rules via idioms, slang and even a regional tone if necessary, remove overly technical terms or jargon. Improve the article for a user to engage and buy, increase active tone, add personal touch, personal stories, specific use cases and experience whilst still maintaining standards related to the Google algorithm, helpful content system and product reviews system.\n\nFocus on sentence structure that makes it easy to semantically connect entities, then focus on choosing the most human entity and smooth transitions between topics, sentences and paragraphs.\nReWrite for and as a human, use natural, conversational dialogue and use stemming, lemmatization, n-grams and zipf's law.", 'title_rephrase': 'Rewrite the title:', 'heading_rephrase': 'Rewrite the heading:', 'para_rephrase': 'Rewrite the para:', 'table_rephrase': 'Rewrite the table:', 'blockquote_rephrase': 'Rewrite the Blockquote:', 'list_rephrase': 'Rewrite the list:'}, 'wordpress_prompt_json_data': {'supportive_prompt_WP_TAG_id': '69c7f5fe-2a33-4d0b-a413-76196766c726', 'supportive_prompt_META_TITLE_id': 'cae4fd8b-ecd3-440c-9522-8f7df0de681a', 'supportive_prompt_WP_AUTHORS_id': 'fbd19b15-80d4-4b50-a229-0b8153d156c8', 'supportive_prompt_META_KEYWORDS_id': '764f272b-d420-4e1e-a08e-d7cb12c54d10', 'supportive_prompt_WP_CATEGORIES_id': 'c05fc7c5-112d-413a-b0f1-48d7d6a0a78b', 'supportive_prompt_META_DESCRIPTION_id': 'f15e34a7-2cb1-484d-b230-28ad8820e26a'}, 'article_type': {'slug_id': 'c82a41f0-9d99-4bc7-bf68-580d4b144d16', 'category': 'url', 'article_category': 'rephrase', 'title': 'Url Rewriter By Para', 'description': 'This prompt helps rewriting the paragraph', 'article_type_field': [{'slug_id': '8dbd1c5d-5246-4f50-8ee6-a1e9fb9092fc', 'label': 'rewrite_para', 'name': 'textbox', 'type': 'text', 'placeholder': 'Enter Rewriting Paragraph Text', 'required': True}]}}, 'variables': [{'slug_id': 'f6931042-0e67-4d1f-9d9c-70fec97c02a6', 'name': 'generated_article_title', 'value': 'This is article Title.', 'required': True}, {'slug_id': '6e43885f-b444-46c8-aae1-22e2e25c1221', 'name': 'generated_article_content', 'value': 'This is article Content.', 'required': True}, {'slug_id': '93f613da-18c5-4f4e-b461-500cc9fd5374', 'name': 'source_article_title', 'value': 'This is Source Article Title.', 'required': True}, {'slug_id': '7049976d-0822-4a3e-93bd-2b099f2f4dda', 'name': 'source_article_content', 'value': 'This is source article content.', 'required': True}, {'slug_id': '7b7b68f4-b2e8-462a-a697-6c47ca0fa15b', 'name': 'wp_all_categories', 'value': '[{"wp_cat_id":1, "name":"xx", "description": "this is description"}, {"wp_cat_id":2, "name":"xy", "description": "this is description"}]', 'required': True}, {'slug_id': '6812b942-9937-4337-9e65-f12a0446b011', 'name': 'wp_all_tags', 'value': '[{"wp_tag_id":1, "name":"xx", "description": "this is description"}, {"wp_tag_id":2, "name":"xy", "description": "this is description"}]', 'required': True}, {'slug_id': '24cbd6dc-6cbb-4ef1-8f80-273f6aecdc1a', 'name': 'output', 'value': '{"wp_cat_id":1, "name":"xx"}', 'required': True}], 'domain': {'slug_id': '25fca9b7-d9a3-42b9-be7b-eadf062716d6', 'name': 'ronak-wolf.botxbyte.com', 'permalinks': '/%year%/%hour%/%postname%/'}, 'workspace': {'slug_id': '57dc902e-4449-4083-9b56-000000000004', 'name': 'bxb-1'}}, 'timestamp': '2025-05-31T14:01:37.608237', 'message_id': '5a4e72b8-2ac9-4bcd-b76d-7f7d04da997d'}
2025-06-06 10:44:46 | INFO | PID:21980 | xxxxxxxxxxxxxxxxxxxxxxxxx url_rewriter_para_response_worker xxxxxxxxxxxxxxxxxxxxxxxxx
2025-06-06 10:44:46 | ERROR | PID:21980 | Message processing failed for data: b'{"message": {"article_slug_id": "4e2e5358-01ce-4e2e-8d5e-7d8c4c6bb5dc", "url": "https://topmovierankings.com/web-series/demands-for-side-hustlers-season-2", "wp_status": "draft", "article_status": "initiate", "wp_schedule_time": null, "is_category_selected_by_ai": true, "is_category_generated_by_ai": true, "is_tag_selected_by_ai": true, "is_tag_generated_by_ai": true, "is_author_selected_by_ai": true, "is_meta_description_generated_by_ai": true, "is_meta_keyword_generated_by_ai": true, "is_meta_title_generated_by_ai": true, "is_internal_links_generated_by_ai": true, "is_external_links_generated_by_ai": true, "wp_author": null, "wp_category": [], "wp_tag": [], "prompt": {"slug_id": "b8ad4e71-328d-40c5-9118-ca51496bf390", "name": "URL Rewriter By Para", "ai_rate_model": "deepseek/deepseek_v3", "prompt_data": {"system_rephrase": "I need you to make this content more engaging for a user, no fluff, remove cringe, increase the humour levels where appropriate but not throughout the content, increase explanations where relevant based on your most up to date understanding of the parent and primary topics.\\n\\nFocus on the emotion, vocabulary, tone and optimization of the article, break standard English rules via idioms, slang and even a regional tone if necessary, remove overly technical terms or jargon. Improve the article for a user to engage and buy, increase active tone, add personal touch, personal stories, specific use cases and experience whilst still maintaining standards related to the Google algorithm, helpful content system and product reviews system.\\n\\nFocus on sentence structure that makes it easy to semantically connect entities, then focus on choosing the most human entity and smooth transitions between topics, sentences and paragraphs.\\nReWrite for and as a human, use natural, conversational dialogue and use stemming, lemmatization, n-grams and zipf\'s law.", "title_rephrase": "Rewrite the title:", "heading_rephrase": "Rewrite the heading:", "para_rephrase": "Rewrite the para:", "table_rephrase": "Rewrite the table:", "blockquote_rephrase": "Rewrite the Blockquote:", "list_rephrase": "Rewrite the list:"}, "wordpress_prompt_json_data": {"supportive_prompt_WP_TAG_id": "69c7f5fe-2a33-4d0b-a413-76196766c726", "supportive_prompt_META_TITLE_id": "cae4fd8b-ecd3-440c-9522-8f7df0de681a", "supportive_prompt_WP_AUTHORS_id": "fbd19b15-80d4-4b50-a229-0b8153d156c8", "supportive_prompt_META_KEYWORDS_id": "764f272b-d420-4e1e-a08e-d7cb12c54d10", "supportive_prompt_WP_CATEGORIES_id": "c05fc7c5-112d-413a-b0f1-48d7d6a0a78b", "supportive_prompt_META_DESCRIPTION_id": "f15e34a7-2cb1-484d-b230-28ad8820e26a"}, "article_type": {"slug_id": "c82a41f0-9d99-4bc7-bf68-580d4b144d16", "category": "url", "article_category": "rephrase", "title": "Url Rewriter By Para", "description": "This prompt helps rewriting the paragraph", "article_type_field": [{"slug_id": "8dbd1c5d-5246-4f50-8ee6-a1e9fb9092fc", "label": "rewrite_para", "name": "textbox", "type": "text", "placeholder": "Enter Rewriting Paragraph Text", "required": true}]}}, "variables": [{"slug_id": "f6931042-0e67-4d1f-9d9c-70fec97c02a6", "name": "generated_article_title", "value": "This is article Title.", "required": true}, {"slug_id": "6e43885f-b444-46c8-aae1-22e2e25c1221", "name": "generated_article_content", "value": "This is article Content.", "required": true}, {"slug_id": "93f613da-18c5-4f4e-b461-500cc9fd5374", "name": "source_article_title", "value": "This is Source Article Title.", "required": true}, {"slug_id": "7049976d-0822-4a3e-93bd-2b099f2f4dda", "name": "source_article_content", "value": "This is source article content.", "required": true}, {"slug_id": "7b7b68f4-b2e8-462a-a697-6c47ca0fa15b", "name": "wp_all_categories", "value": "[{\\"wp_cat_id\\":1, \\"name\\":\\"xx\\", \\"description\\": \\"this is description\\"}, {\\"wp_cat_id\\":2, \\"name\\":\\"xy\\", \\"description\\": \\"this is description\\"}]", "required": true}, {"slug_id": "6812b942-9937-4337-9e65-f12a0446b011", "name": "wp_all_tags", "value": "[{\\"wp_tag_id\\":1, \\"name\\":\\"xx\\", \\"description\\": \\"this is description\\"}, {\\"wp_tag_id\\":2, \\"name\\":\\"xy\\", \\"description\\": \\"this is description\\"}]", "required": true}, {"slug_id": "24cbd6dc-6cbb-4ef1-8f80-273f6aecdc1a", "name": "output", "value": "{\\"wp_cat_id\\":1, \\"name\\":\\"xx\\"}", "required": true}], "domain": {"slug_id": "25fca9b7-d9a3-42b9-be7b-eadf062716d6", "name": "ronak-wolf.botxbyte.com", "permalinks": "/%year%/%hour%/%postname%/"}, "workspace": {"slug_id": "57dc902e-4449-4083-9b56-000000000004", "name": "bxb-1"}}, "timestamp": "2025-05-31T14:01:37.608237", "message_id": "5a4e72b8-2ac9-4bcd-b76d-7f7d04da997d"}'. Error: (406, 'PRECONDITION_FAILED - unknown delivery tag 1')
2025-06-06 10:44:46 | ERROR | PID:21980 | Error in callback: Channel is closed.
2025-06-06 10:44:46 | WARNING | PID:21980 | Channel wrong state: Channel is closed.
2025-06-06 10:44:46 | INFO | PID:22144 | Started url_rewriter_para_response_worker on queue: article-input-queue
2025-06-06 10:44:46 | INFO | PID:22144 | Started url_rewriter_para_response_worker with PID: 22144, queue: article-input-queue
2025-06-06 10:44:48 | ERROR | PID:21980 | Worker url_rewriter_para_response_worker failed to register with RabbitMQ
2025-06-06 10:44:51 | WARNING | PID:22144 | No open connection/channel: connecting...
2025-06-06 10:44:51 | INFO | PID:22144 | Successfully connected on attempt 1
2025-06-06 10:44:51 | INFO | PID:22144 | Consumer registered on queue: article-input-queue
2025-06-06 10:44:51 | INFO | PID:22144 | Starting consuming on article-input-queue
2025-06-06 10:44:51 | INFO | PID:22144 | Processing message from queue: article-input-queue
2025-06-06 10:44:51 | INFO | PID:22144 | Processing message: {'message': {'article_slug_id': '4e2e5358-01ce-4e2e-8d5e-7d8c4c6bb5dc', 'url': 'https://topmovierankings.com/web-series/demands-for-side-hustlers-season-2', 'wp_status': 'draft', 'article_status': 'initiate', 'wp_schedule_time': None, 'is_category_selected_by_ai': True, 'is_category_generated_by_ai': True, 'is_tag_selected_by_ai': True, 'is_tag_generated_by_ai': True, 'is_author_selected_by_ai': True, 'is_meta_description_generated_by_ai': True, 'is_meta_keyword_generated_by_ai': True, 'is_meta_title_generated_by_ai': True, 'is_internal_links_generated_by_ai': True, 'is_external_links_generated_by_ai': True, 'wp_author': None, 'wp_category': [], 'wp_tag': [], 'prompt': {'slug_id': 'b8ad4e71-328d-40c5-9118-ca51496bf390', 'name': 'URL Rewriter By Para', 'ai_rate_model': 'deepseek/deepseek_v3', 'prompt_data': {'system_rephrase': "I need you to make this content more engaging for a user, no fluff, remove cringe, increase the humour levels where appropriate but not throughout the content, increase explanations where relevant based on your most up to date understanding of the parent and primary topics.\n\nFocus on the emotion, vocabulary, tone and optimization of the article, break standard English rules via idioms, slang and even a regional tone if necessary, remove overly technical terms or jargon. Improve the article for a user to engage and buy, increase active tone, add personal touch, personal stories, specific use cases and experience whilst still maintaining standards related to the Google algorithm, helpful content system and product reviews system.\n\nFocus on sentence structure that makes it easy to semantically connect entities, then focus on choosing the most human entity and smooth transitions between topics, sentences and paragraphs.\nReWrite for and as a human, use natural, conversational dialogue and use stemming, lemmatization, n-grams and zipf's law.", 'title_rephrase': 'Rewrite the title:', 'heading_rephrase': 'Rewrite the heading:', 'para_rephrase': 'Rewrite the para:', 'table_rephrase': 'Rewrite the table:', 'blockquote_rephrase': 'Rewrite the Blockquote:', 'list_rephrase': 'Rewrite the list:'}, 'wordpress_prompt_json_data': {'supportive_prompt_WP_TAG_id': '69c7f5fe-2a33-4d0b-a413-76196766c726', 'supportive_prompt_META_TITLE_id': 'cae4fd8b-ecd3-440c-9522-8f7df0de681a', 'supportive_prompt_WP_AUTHORS_id': 'fbd19b15-80d4-4b50-a229-0b8153d156c8', 'supportive_prompt_META_KEYWORDS_id': '764f272b-d420-4e1e-a08e-d7cb12c54d10', 'supportive_prompt_WP_CATEGORIES_id': 'c05fc7c5-112d-413a-b0f1-48d7d6a0a78b', 'supportive_prompt_META_DESCRIPTION_id': 'f15e34a7-2cb1-484d-b230-28ad8820e26a'}, 'article_type': {'slug_id': 'c82a41f0-9d99-4bc7-bf68-580d4b144d16', 'category': 'url', 'article_category': 'rephrase', 'title': 'Url Rewriter By Para', 'description': 'This prompt helps rewriting the paragraph', 'article_type_field': [{'slug_id': '8dbd1c5d-5246-4f50-8ee6-a1e9fb9092fc', 'label': 'rewrite_para', 'name': 'textbox', 'type': 'text', 'placeholder': 'Enter Rewriting Paragraph Text', 'required': True}]}}, 'variables': [{'slug_id': 'f6931042-0e67-4d1f-9d9c-70fec97c02a6', 'name': 'generated_article_title', 'value': 'This is article Title.', 'required': True}, {'slug_id': '6e43885f-b444-46c8-aae1-22e2e25c1221', 'name': 'generated_article_content', 'value': 'This is article Content.', 'required': True}, {'slug_id': '93f613da-18c5-4f4e-b461-500cc9fd5374', 'name': 'source_article_title', 'value': 'This is Source Article Title.', 'required': True}, {'slug_id': '7049976d-0822-4a3e-93bd-2b099f2f4dda', 'name': 'source_article_content', 'value': 'This is source article content.', 'required': True}, {'slug_id': '7b7b68f4-b2e8-462a-a697-6c47ca0fa15b', 'name': 'wp_all_categories', 'value': '[{"wp_cat_id":1, "name":"xx", "description": "this is description"}, {"wp_cat_id":2, "name":"xy", "description": "this is description"}]', 'required': True}, {'slug_id': '6812b942-9937-4337-9e65-f12a0446b011', 'name': 'wp_all_tags', 'value': '[{"wp_tag_id":1, "name":"xx", "description": "this is description"}, {"wp_tag_id":2, "name":"xy", "description": "this is description"}]', 'required': True}, {'slug_id': '24cbd6dc-6cbb-4ef1-8f80-273f6aecdc1a', 'name': 'output', 'value': '{"wp_cat_id":1, "name":"xx"}', 'required': True}], 'domain': {'slug_id': '25fca9b7-d9a3-42b9-be7b-eadf062716d6', 'name': 'ronak-wolf.botxbyte.com', 'permalinks': '/%year%/%hour%/%postname%/'}, 'workspace': {'slug_id': '57dc902e-4449-4083-9b56-000000000004', 'name': 'bxb-1'}}, 'timestamp': '2025-05-31T14:01:37.608237', 'message_id': '5a4e72b8-2ac9-4bcd-b76d-7f7d04da997d'}
2025-06-06 10:44:51 | INFO | PID:22144 | xxxxxxxxxxxxxxxxxxxxxxxxx url_rewriter_para_response_worker xxxxxxxxxxxxxxxxxxxxxxxxx
2025-06-06 10:44:51 | INFO | PID:22144 | Message processed in 0.01 seconds
2025-06-06 10:44:51 | INFO | PID:22144 | Message acknowledged
2025-06-06 10:44:51 | INFO | PID:21980 | Stopped consumer-article-input-queue-url_rewriter_para_response_worker
2025-06-06 10:44:56 | WARNING | PID:22144 | No open connection/channel: connecting...
2025-06-06 10:44:56 | INFO | PID:22144 | Successfully connected on attempt 1
2025-06-06 10:44:56 | INFO | PID:22144 | Consumer registered on queue: article-input-queue
2025-06-06 10:44:56 | INFO | PID:22144 | Starting consuming on article-input-queue
2025-06-06 10:44:58 | ERROR | PID:22144 | Worker url_rewriter_para_response_worker failed to register with RabbitMQ
2025-06-06 10:45:04 | INFO | PID:27984 | Starting worker url_rewriter_para_response_worker for queue article-input-queue
2025-06-06 10:45:04 | INFO | PID:27984 | Created new channel
2025-06-06 10:45:04 | INFO | PID:27984 | Declared queue: article-input-queue
2025-06-06 10:45:04 | INFO | PID:27984 | Available workers: ['testworker', 'url_rewriter_para_response_worker', 'url_rewriter_para_worker']
2025-06-06 10:45:04 | INFO | PID:27984 | Found worker class: UrlRewriterParallelWorker
2025-06-06 10:45:04 | WARNING | PID:27984 | Detected localhost connection - disabling SSL verification for development
2025-06-06 10:45:04 | WARNING | PID:27984 | ⚠️  SSL verification is disabled - DO NOT use this in production!
2025-06-06 10:45:04 | INFO | PID:27984 | Worker instance created
2025-06-06 10:45:04 | INFO | PID:27984 | Registered worker process 27984 in registry
2025-06-06 10:45:04 | INFO | PID:27984 | Starting consuming on article-input-queue
2025-06-06 10:45:05 | INFO | PID:27984 | Started url_rewriter_para_response_worker on queue: article-input-queue
2025-06-06 10:45:05 | INFO | PID:27984 | Started url_rewriter_para_response_worker with PID: 27984, queue: article-input-queue
2025-06-06 10:45:09 | WARNING | PID:27984 | No open connection/channel: connecting...
2025-06-06 10:45:10 | INFO | PID:27984 | Successfully connected on attempt 1
2025-06-06 10:45:10 | INFO | PID:27984 | Consumer registered on queue: article-input-queue
2025-06-06 10:45:10 | INFO | PID:27984 | Starting consuming on article-input-queue
2025-06-06 10:46:26 | INFO | PID:21916 | Starting worker url_rewriter_para_response_worker for queue article-output-queue
2025-06-06 10:46:26 | INFO | PID:21916 | Created new channel
2025-06-06 10:46:26 | INFO | PID:21916 | Declared queue: article-output-queue
2025-06-06 10:46:26 | INFO | PID:21916 | Available workers: ['testworker', 'url_rewriter_para_response_worker', 'url_rewriter_para_worker']
2025-06-06 10:46:26 | INFO | PID:21916 | Found worker class: UrlRewriterParallelWorker
2025-06-06 10:46:26 | WARNING | PID:21916 | Detected localhost connection - disabling SSL verification for development
2025-06-06 10:46:26 | WARNING | PID:21916 | ⚠️  SSL verification is disabled - DO NOT use this in production!
2025-06-06 10:46:26 | INFO | PID:21916 | Worker instance created
2025-06-06 10:46:26 | INFO | PID:21916 | Registered worker process 21916 in registry
2025-06-06 10:46:26 | INFO | PID:21916 | Starting consuming on article-output-queue
2025-06-06 10:46:26 | INFO | PID:21916 | Started url_rewriter_para_response_worker on queue: article-output-queue
2025-06-06 10:46:26 | INFO | PID:21916 | Started url_rewriter_para_response_worker with PID: 21916, queue: article-output-queue
2025-06-06 10:46:31 | WARNING | PID:21916 | No open connection/channel: connecting...
2025-06-06 10:46:31 | INFO | PID:21916 | Successfully connected on attempt 1
2025-06-06 10:46:31 | INFO | PID:21916 | Consumer registered on queue: article-output-queue
2025-06-06 10:46:31 | INFO | PID:21916 | Starting consuming on article-output-queue
2025-06-06 10:47:16 | INFO | PID:21916 | Processing message from queue: article-output-queue
2025-06-06 10:47:16 | INFO | PID:21916 | Processing message: {'message': {'prompt': 'What is the capital of Idian?', 'content': "I need to know about India's capital city.", 'workspace_id': '57dc902e-4449-4083-9b56-000000000004', 'model': 'gpt-4', 'system_prompt': 'You are a helpful assistant.', 'sequence_index': 1, 'html_tag': 'p', 'response_format': 'json', 'article_id': '57dc902e-4449-4083-9b56-000000000002', 'message_id': 'aa952552-33d8-42ee-94df-c680b366e8fb', 'article_message_count': 10, 'use_simulation': False}, 'timestamp': '2025-06-06T10:47:16.878402', 'message_id': '4e2b7ce7-cf0b-4b8f-86b3-5229f0836b8d'}
2025-06-06 10:47:16 | INFO | PID:21916 | xxxxxxxxxxxxxxxxxxxxxxxxx url_rewriter_para_response_worker xxxxxxxxxxxxxxxxxxxxxxxxx
2025-06-06 10:47:16 | INFO | PID:21916 | Message processed in 0.00 seconds
2025-06-06 10:47:16 | INFO | PID:21916 | Message acknowledged
2025-06-06 10:47:21 | WARNING | PID:21916 | No open connection/channel: connecting...
2025-06-06 10:47:21 | INFO | PID:21916 | Successfully connected on attempt 1
2025-06-06 10:47:21 | INFO | PID:21916 | Consumer registered on queue: article-output-queue
2025-06-06 10:47:21 | INFO | PID:21916 | Starting consuming on article-output-queue
2025-06-06 10:51:23 | INFO | PID:33144 | Starting worker url_rewriter_para_response_worker for queue article-output-queue
2025-06-06 10:51:23 | INFO | PID:33144 | Created new channel
2025-06-06 10:51:23 | INFO | PID:33144 | Declared queue: article-output-queue
2025-06-06 10:51:24 | INFO | PID:33144 | Available workers: ['testworker', 'url_rewriter_para_response_worker', 'url_rewriter_para_worker']
2025-06-06 10:51:24 | INFO | PID:33144 | Found worker class: UrlRewriterParallelWorker
2025-06-06 10:51:24 | WARNING | PID:33144 | Detected localhost connection - disabling SSL verification for development
2025-06-06 10:51:24 | WARNING | PID:33144 | ⚠️  SSL verification is disabled - DO NOT use this in production!
2025-06-06 10:51:24 | INFO | PID:33144 | Worker instance created
2025-06-06 10:51:24 | INFO | PID:33144 | Registered worker process 33144 in registry
2025-06-06 10:51:24 | INFO | PID:33144 | Starting consuming on article-output-queue
2025-06-06 10:51:24 | INFO | PID:33144 | Started url_rewriter_para_response_worker on queue: article-output-queue
2025-06-06 10:51:24 | INFO | PID:33144 | Started url_rewriter_para_response_worker with PID: 33144, queue: article-output-queue
2025-06-06 10:51:29 | WARNING | PID:33144 | No open connection/channel: connecting...
2025-06-06 10:51:29 | INFO | PID:33144 | Successfully connected on attempt 1
2025-06-06 10:51:29 | INFO | PID:33144 | Consumer registered on queue: article-output-queue
2025-06-06 10:51:29 | INFO | PID:33144 | Starting consuming on article-output-queue
2025-06-06 10:51:44 | INFO | PID:33144 | Processing message from queue: article-output-queue
2025-06-06 10:51:44 | INFO | PID:33144 | Processing message: {'message': {'prompt': 'What is the capital of Idian?', 'content': "I need to know about India's capital city.", 'workspace_id': '57dc902e-4449-4083-9b56-000000000004', 'model': 'gpt-4', 'system_prompt': 'You are a helpful assistant.', 'sequence_index': 1, 'html_tag': 'p', 'response_format': 'json', 'article_id': '57dc902e-4449-4083-9b56-000000000002', 'message_id': 'aa952552-33d8-42ee-94df-c680b366e8fb', 'article_message_count': 10, 'use_simulation': False}, 'timestamp': '2025-06-06T10:51:43.974180', 'message_id': '33057c7a-50e8-4cc2-8ddd-f4e9e44ca688'}
2025-06-06 10:51:44 | INFO | PID:33144 | Making update request to endpoint: message-service-api/ai-message/update/57dc902e-4449-4083-9b56-000000000002/aa952552-33d8-42ee-94df-c680b366e8fb
2025-06-06 10:51:44 | INFO | PID:33144 | Successfully authenticated with API
2025-06-06 10:51:44 | INFO | PID:33144 | Making PATCH request to message-service-api/ai-message/update/57dc902e-4449-4083-9b56-000000000002/aa952552-33d8-42ee-94df-c680b366e8fb (Attempt 1/3)
2025-06-06 10:51:44 | ERROR | PID:33144 | Request exception on attempt 1: Failed to parse: https://127.0.0.1:8000message-service-api/ai-message/update/57dc902e-4449-4083-9b56-000000000002/aa952552-33d8-42ee-94df-c680b366e8fb
2025-06-06 10:51:46 | INFO | PID:33144 | Making PATCH request to message-service-api/ai-message/update/57dc902e-4449-4083-9b56-000000000002/aa952552-33d8-42ee-94df-c680b366e8fb (Attempt 2/3)
2025-06-06 10:51:46 | ERROR | PID:33144 | Request exception on attempt 2: Failed to parse: https://127.0.0.1:8000message-service-api/ai-message/update/57dc902e-4449-4083-9b56-000000000002/aa952552-33d8-42ee-94df-c680b366e8fb
2025-06-06 10:51:48 | INFO | PID:33144 | Making PATCH request to message-service-api/ai-message/update/57dc902e-4449-4083-9b56-000000000002/aa952552-33d8-42ee-94df-c680b366e8fb (Attempt 3/3)
2025-06-06 10:51:48 | ERROR | PID:33144 | Request exception on attempt 3: Failed to parse: https://127.0.0.1:8000message-service-api/ai-message/update/57dc902e-4449-4083-9b56-000000000002/aa952552-33d8-42ee-94df-c680b366e8fb
2025-06-06 10:51:48 | INFO | PID:33144 | xxxxxxxxxxxxxxxxxxxxxxxxx url_rewriter_para_response_worker xxxxxxxxxxxxxxxxxxxxxxxxx
2025-06-06 10:51:48 | INFO | PID:33144 | Message processed in 4.95 seconds
2025-06-06 10:51:48 | INFO | PID:33144 | Message acknowledged
2025-06-06 10:51:54 | WARNING | PID:33144 | No open connection/channel: connecting...
2025-06-06 10:51:54 | INFO | PID:33144 | Successfully connected on attempt 1
2025-06-06 10:51:54 | INFO | PID:33144 | Consumer registered on queue: article-output-queue
2025-06-06 10:51:54 | INFO | PID:33144 | Starting consuming on article-output-queue
2025-06-06 10:52:37 | INFO | PID:18172 | Starting worker url_rewriter_para_response_worker for queue article-output-queue
2025-06-06 10:52:37 | INFO | PID:18172 | Created new channel
2025-06-06 10:52:37 | INFO | PID:18172 | Declared queue: article-output-queue
2025-06-06 10:52:38 | INFO | PID:18172 | Available workers: ['testworker', 'url_rewriter_para_response_worker', 'url_rewriter_para_worker']
2025-06-06 10:52:38 | INFO | PID:18172 | Found worker class: UrlRewriterParallelWorker
2025-06-06 10:52:38 | WARNING | PID:18172 | Detected localhost connection - disabling SSL verification for development
2025-06-06 10:52:38 | WARNING | PID:18172 | ⚠️  SSL verification is disabled - DO NOT use this in production!
2025-06-06 10:52:38 | INFO | PID:18172 | Worker instance created
2025-06-06 10:52:38 | INFO | PID:18172 | Registered worker process 18172 in registry
2025-06-06 10:52:38 | INFO | PID:18172 | Starting consuming on article-output-queue
2025-06-06 10:52:38 | INFO | PID:18172 | Started url_rewriter_para_response_worker on queue: article-output-queue
2025-06-06 10:52:38 | INFO | PID:18172 | Started url_rewriter_para_response_worker with PID: 18172, queue: article-output-queue
2025-06-06 10:52:43 | WARNING | PID:18172 | No open connection/channel: connecting...
2025-06-06 10:52:43 | INFO | PID:18172 | Successfully connected on attempt 1
2025-06-06 10:52:43 | INFO | PID:18172 | Consumer registered on queue: article-output-queue
2025-06-06 10:52:43 | INFO | PID:18172 | Starting consuming on article-output-queue
2025-06-06 10:52:58 | INFO | PID:18172 | Processing message from queue: article-output-queue
2025-06-06 10:52:58 | INFO | PID:18172 | Processing message: {'message': {'prompt': 'What is the capital of Idian?', 'content': "I need to know about India's capital city.", 'workspace_id': '57dc902e-4449-4083-9b56-000000000004', 'model': 'gpt-4', 'system_prompt': 'You are a helpful assistant.', 'sequence_index': 1, 'html_tag': 'p', 'response_format': 'json', 'article_id': '57dc902e-4449-4083-9b56-000000000002', 'message_id': 'aa952552-33d8-42ee-94df-c680b366e8fb', 'article_message_count': 10, 'use_simulation': False}, 'timestamp': '2025-06-06T10:52:58.915273', 'message_id': 'be1bc368-077e-4c03-9875-d6e3782e3d55'}
2025-06-06 10:52:58 | INFO | PID:18172 | Making update request to endpoint: /message-service-api/ai-message/update/57dc902e-4449-4083-9b56-000000000002/aa952552-33d8-42ee-94df-c680b366e8fb
2025-06-06 10:53:00 | INFO | PID:18172 | Successfully authenticated with API
2025-06-06 10:53:00 | INFO | PID:18172 | Making PATCH request to /message-service-api/ai-message/update/57dc902e-4449-4083-9b56-000000000002/aa952552-33d8-42ee-94df-c680b366e8fb (Attempt 1/3)
2025-06-06 10:53:01 | WARNING | PID:18172 | Attempt 1 failed: Request failed with status 500: <!doctype html>
<html lang=en>
  <head>
    <title>RuntimeError: You called this URL via PATCH, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PATCH data. Change your form to point to 127.0.0.1:8000/message-service-api/ai-message/update/57dc902e-4449-4083-9b56-000000000002/aa952552-33d8-42ee-94df-c680b366e8fb/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css">
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script>
      var CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "JZuc5Nybhq6WZU27qjrX";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>RuntimeError</h1>
<div class="detail">
  <p class="errormsg">RuntimeError: You called this URL via PATCH, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PATCH data. Change your form to point to 127.0.0.1:8000/message-service-api/ai-message/update/57dc902e-4449-4083-9b56-000000000002/aa952552-33d8-42ee-94df-c680b366e8fb/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.
</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  <h3></h3>
  <ul><li><div class="frame" id="frame-2302074240832">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\contrib\staticfiles\handlers.py"</cite>,
      line <em class="line">80</em>,
      in <code class="function">__call__</code></h4>
  <div class="source "><pre class="line before"><span class="ws">        </span>self.base_url = urlparse(self.get_base_url())</pre>
<pre class="line before"><span class="ws">        </span>super().__init__()</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def __call__(self, environ, start_response):</pre>
<pre class="line before"><span class="ws">        </span>if not self._should_handle(get_path_info(environ)):</pre>
<pre class="line current"><span class="ws">            </span>return self.application(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>return super().__call__(environ, start_response)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span>class ASGIStaticFilesHandler(StaticFilesHandlerMixin, ASGIHandler):</pre>
<pre class="line after"><span class="ws">    </span>&#34;&#34;&#34;</pre></div>
</div>

<li><div class="frame" id="frame-2302074238816">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\wsgi.py"</cite>,
      line <em class="line">124</em>,
      in <code class="function">__call__</code></h4>
  <div class="source "><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def __call__(self, environ, start_response):</pre>
<pre class="line before"><span class="ws">        </span>set_script_prefix(get_script_name(environ))</pre>
<pre class="line before"><span class="ws">        </span>signals.request_started.send(sender=self.__class__, environ=environ)</pre>
<pre class="line before"><span class="ws">        </span>request = self.request_class(environ)</pre>
<pre class="line current"><span class="ws">        </span>response = self.get_response(request)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>response._handler_class = self.__class__</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>status = &#34;%d %s&#34; % (response.status_code, response.reason_phrase)</pre>
<pre class="line after"><span class="ws">        </span>response_headers = [</pre></div>
</div>

<li><div class="frame" id="frame-2302078370304">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\base.py"</cite>,
      line <em class="line">140</em>,
      in <code class="function">get_response</code></h4>
  <div class="source "><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def get_response(self, request):</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;Return an HttpResponse object for the given HttpRequest.&#34;&#34;&#34;</pre>
<pre class="line before"><span class="ws">        </span># Setup default url resolver for this thread</pre>
<pre class="line before"><span class="ws">        </span>set_urlconf(settings.ROOT_URLCONF)</pre>
<pre class="line current"><span class="ws">        </span>response = self._middleware_chain(request)</pre>
<pre class="line after"><span class="ws">        </span>response._resource_closers.append(request.close)</pre>
<pre class="line after"><span class="ws">        </span>if response.status_code &gt;= 400:</pre>
<pre class="line after"><span class="ws">            </span>log_response(</pre>
<pre class="line after"><span class="ws">                </span>&#34;%s: %s&#34;,</pre>
<pre class="line after"><span class="ws">                </span>response.reason_phrase,</pre></div>
</div>

<li><div class="frame" id="frame-2302078378592">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py"</cite>,
      line <em class="line">57</em>,
      in <code class="function">inner</code></h4>
  <div class="source "><pre class="line before"><span class="ws">        </span>@wraps(get_response)</pre>
<pre class="line before"><span class="ws">        </span>def inner(request):</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>response = get_response(request)</pre>
<pre class="line before"><span class="ws">            </span>except Exception as exc:</pre>
<pre class="line current"><span class="ws">                </span>response = response_for_exception(request, exc)</pre>
<pre class="line after"><span class="ws">            </span>return response</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>return inner</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span> </pre></div>
</div>

<li><div class="frame" id="frame-2302078381616">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py"</cite>,
      line <em class="line">140</em>,
      in <code class="function">response_for_exception</code></h4>
  <div class="source "><pre class="line before"><span class="ws">                </span>request, get_resolver(get_urlconf()), 400, exc</pre>
<pre class="line before"><span class="ws">            </span>)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>else:</pre>
<pre class="line before"><span class="ws">        </span>signals.got_request_exception.send(sender=None, request=request)</pre>
<pre class="line current"><span class="ws">        </span>response = handle_uncaught_exception(</pre>
<pre class="line after"><span class="ws">            </span>request, get_resolver(get_urlconf()), sys.exc_info()</pre>
<pre class="line after"><span class="ws">        </span>)</pre>
<pre class="line after"><span class="ws">        </span>log_response(</pre>
<pre class="line after"><span class="ws">            </span>&#34;%s: %s&#34;,</pre>
<pre class="line after"><span class="ws">            </span>response.reason_phrase,</pre></div>
</div>

<li><div class="frame" id="frame-2302078381728">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py"</cite>,
      line <em class="line">181</em>,
      in <code class="function">handle_uncaught_exception</code></h4>
  <div class="source "><pre class="line before"><span class="ws">    </span>&#34;&#34;&#34;</pre>
<pre class="line before"><span class="ws">    </span>if settings.DEBUG_PROPAGATE_EXCEPTIONS:</pre>
<pre class="line before"><span class="ws">        </span>raise</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>if settings.DEBUG:</pre>
<pre class="line current"><span class="ws">        </span>return debug.technical_500_response(request, *exc_info)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span># Return an HttpResponse that displays a friendly error message.</pre>
<pre class="line after"><span class="ws">    </span>callback = resolver.resolve_error_handler(500)</pre>
<pre class="line after"><span class="ws">    </span>return callback(request)</pre></div>
</div>

<li><div class="frame" id="frame-2302078381840">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django_extensions\management\technical_response.py"</cite>,
      line <em class="line">41</em>,
      in <code class="function">null_technical_500_response</code></h4>
  <div class="source "><pre class="line before"><span class="ws">    </span>try:</pre>
<pre class="line before"><span class="ws">        </span>if exc_value is None:</pre>
<pre class="line before"><span class="ws">            </span>exc_value = exc_type()</pre>
<pre class="line before"><span class="ws">        </span>if exc_value.__traceback__ is not tb:</pre>
<pre class="line before"><span class="ws">            </span>raise exc_value.with_traceback(tb)</pre>
<pre class="line current"><span class="ws">        </span>raise exc_value</pre>
<pre class="line after"><span class="ws">    </span>finally:</pre>
<pre class="line after"><span class="ws">        </span>exc_value = None</pre>
<pre class="line after"><span class="ws">        </span>tb = None</pre></div>
</div>

<li><div class="frame" id="frame-2302078382288">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py"</cite>,
      line <em class="line">55</em>,
      in <code class="function">inner</code></h4>
  <div class="source "><pre class="line before"><span class="ws">    </span>else:</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>@wraps(get_response)</pre>
<pre class="line before"><span class="ws">        </span>def inner(request):</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line current"><span class="ws">                </span>response = get_response(request)</pre>
<pre class="line after"><span class="ws">            </span>except Exception as exc:</pre>
<pre class="line after"><span class="ws">                </span>response = response_for_exception(request, exc)</pre>
<pre class="line after"><span class="ws">            </span>return response</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>return inner</pre></div>
</div>

<li><div class="frame" id="frame-2302078382400">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\corsheaders\middleware.py"</cite>,
      line <em class="line">56</em>,
      in <code class="function">__call__</code></h4>
  <div class="source "><pre class="line before"><span class="ws">    </span>) -&gt; HttpResponseBase | Awaitable[HttpResponseBase]:</pre>
<pre class="line before"><span class="ws">        </span>if self.async_mode:</pre>
<pre class="line before"><span class="ws">            </span>return self.__acall__(request)</pre>
<pre class="line before"><span class="ws">        </span>response: HttpResponseBase | None = self.check_preflight(request)</pre>
<pre class="line before"><span class="ws">        </span>if response is None:</pre>
<pre class="line current"><span class="ws">            </span>result = self.get_response(request)</pre>
<pre class="line after"><span class="ws">            </span>assert isinstance(result, HttpResponseBase)</pre>
<pre class="line after"><span class="ws">            </span>response = result</pre>
<pre class="line after"><span class="ws">        </span>self.add_response_headers(request, response)</pre>
<pre class="line after"><span class="ws">        </span>return response</pre>
<pre class="line after"><span class="ws"></span> </pre></div>
</div>

<li><div class="frame" id="frame-2302078385536">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py"</cite>,
      line <em class="line">57</em>,
      in <code class="function">inner</code></h4>
  <div class="source "><pre class="line before"><span class="ws">        </span>@wraps(get_response)</pre>
<pre class="line before"><span class="ws">        </span>def inner(request):</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>response = get_response(request)</pre>
<pre class="line before"><span class="ws">            </span>except Exception as exc:</pre>
<pre class="line current"><span class="ws">                </span>response = response_for_exception(request, exc)</pre>
<pre class="line after"><span class="ws">            </span>return response</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>return inner</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span> </pre></div>
</div>

<li><div class="frame" id="frame-2302078385648">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py"</cite>,
      line <em class="line">140</em>,
      in <code class="function">response_for_exception</code></h4>
  <div class="source "><pre class="line before"><span class="ws">                </span>request, get_resolver(get_urlconf()), 400, exc</pre>
<pre class="line before"><span class="ws">            </span>)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>else:</pre>
<pre class="line before"><span class="ws">        </span>signals.got_request_exception.send(sender=None, request=request)</pre>
<pre class="line current"><span class="ws">        </span>response = handle_uncaught_exception(</pre>
<pre class="line after"><span class="ws">            </span>request, get_resolver(get_urlconf()), sys.exc_info()</pre>
<pre class="line after"><span class="ws">        </span>)</pre>
<pre class="line after"><span class="ws">        </span>log_response(</pre>
<pre class="line after"><span class="ws">            </span>&#34;%s: %s&#34;,</pre>
<pre class="line after"><span class="ws">            </span>response.reason_phrase,</pre></div>
</div>

<li><div class="frame" id="frame-2302078385760">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py"</cite>,
      line <em class="line">181</em>,
      in <code class="function">handle_uncaught_exception</code></h4>
  <div class="source "><pre class="line before"><span class="ws">    </span>&#34;&#34;&#34;</pre>
<pre class="line before"><span class="ws">    </span>if settings.DEBUG_PROPAGATE_EXCEPTIONS:</pre>
<pre class="line before"><span class="ws">        </span>raise</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>if settings.DEBUG:</pre>
<pre class="line current"><span class="ws">        </span>return debug.technical_500_response(request, *exc_info)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span># Return an HttpResponse that displays a friendly error message.</pre>
<pre class="line after"><span class="ws">    </span>callback = resolver.resolve_error_handler(500)</pre>
<pre class="line after"><span class="ws">    </span>return callback(request)</pre></div>
</div>

<li><div class="frame" id="frame-2302078385872">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django_extensions\management\technical_response.py"</cite>,
      line <em class="line">41</em>,
      in <code class="function">null_technical_500_response</code></h4>
  <div class="source "><pre class="line before"><span class="ws">    </span>try:</pre>
<pre class="line before"><span class="ws">        </span>if exc_value is None:</pre>
<pre class="line before"><span class="ws">            </span>exc_value = exc_type()</pre>
<pre class="line before"><span class="ws">        </span>if exc_value.__traceback__ is not tb:</pre>
<pre class="line before"><span class="ws">            </span>raise exc_value.with_traceback(tb)</pre>
<pre class="line current"><span class="ws">        </span>raise exc_value</pre>
<pre class="line after"><span class="ws">    </span>finally:</pre>
<pre class="line after"><span class="ws">        </span>exc_value = None</pre>
<pre class="line after"><span class="ws">        </span>tb = None</pre></div>
</div>

<li><div class="frame" id="frame-2302078385984">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py"</cite>,
      line <em class="line">55</em>,
      in <code class="function">inner</code></h4>
  <div class="source "><pre class="line before"><span class="ws">    </span>else:</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>@wraps(get_response)</pre>
<pre class="line before"><span class="ws">        </span>def inner(request):</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line current"><span class="ws">                </span>response = get_response(request)</pre>
<pre class="line after"><span class="ws">            </span>except Exception as exc:</pre>
<pre class="line after"><span class="ws">                </span>response = response_for_exception(request, exc)</pre>
<pre class="line after"><span class="ws">            </span>return response</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>return inner</pre></div>
</div>

<li><div class="frame" id="frame-2302078419008">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\utils\deprecation.py"</cite>,
      line <em class="line">129</em>,
      in <code class="function">__call__</code></h4>
  <div class="source "><pre class="line before"><span class="ws">        </span>if self.async_mode:</pre>
<pre class="line before"><span class="ws">            </span>return self.__acall__(request)</pre>
<pre class="line before"><span class="ws">        </span>response = None</pre>
<pre class="line before"><span class="ws">        </span>if hasattr(self, &#34;process_request&#34;):</pre>
<pre class="line before"><span class="ws">            </span>response = self.process_request(request)</pre>
<pre class="line current"><span class="ws">        </span>response = response or self.get_response(request)</pre>
<pre class="line after"><span class="ws">        </span>if hasattr(self, &#34;process_response&#34;):</pre>
<pre class="line after"><span class="ws">            </span>response = self.process_response(request, response)</pre>
<pre class="line after"><span class="ws">        </span>return response</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>async def __acall__(self, request):</pre></div>
</div>

<li><div class="frame" id="frame-2302078421584">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py"</cite>,
      line <em class="line">57</em>,
      in <code class="function">inner</code></h4>
  <div class="source "><pre class="line before"><span class="ws">        </span>@wraps(get_response)</pre>
<pre class="line before"><span class="ws">        </span>def inner(request):</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>response = get_response(request)</pre>
<pre class="line before"><span class="ws">            </span>except Exception as exc:</pre>
<pre class="line current"><span class="ws">                </span>response = response_for_exception(request, exc)</pre>
<pre class="line after"><span class="ws">            </span>return response</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>return inner</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span> </pre></div>
</div>

<li><div class="frame" id="frame-2302078421696">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py"</cite>,
      line <em class="line">140</em>,
      in <code class="function">response_for_exception</code></h4>
  <div class="source "><pre class="line before"><span class="ws">                </span>request, get_resolver(get_urlconf()), 400, exc</pre>
<pre class="line before"><span class="ws">            </span>)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>else:</pre>
<pre class="line before"><span class="ws">        </span>signals.got_request_exception.send(sender=None, request=request)</pre>
<pre class="line current"><span class="ws">        </span>response = handle_uncaught_exception(</pre>
<pre class="line after"><span class="ws">            </span>request, get_resolver(get_urlconf()), sys.exc_info()</pre>
<pre class="line after"><span class="ws">        </span>)</pre>
<pre class="line after"><span class="ws">        </span>log_response(</pre>
<pre class="line after"><span class="ws">            </span>&#34;%s: %s&#34;,</pre>
<pre class="line after"><span class="ws">            </span>response.reason_phrase,</pre></div>
</div>

<li><div class="frame" id="frame-2302078421808">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py"</cite>,
      line <em class="line">181</em>,
      in <code class="function">handle_uncaught_exception</code></h4>
  <div class="source "><pre class="line before"><span class="ws">    </span>&#34;&#34;&#34;</pre>
<pre class="line before"><span class="ws">    </span>if settings.DEBUG_PROPAGATE_EXCEPTIONS:</pre>
<pre class="line before"><span class="ws">        </span>raise</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>if settings.DEBUG:</pre>
<pre class="line current"><span class="ws">        </span>return debug.technical_500_response(request, *exc_info)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span># Return an HttpResponse that displays a friendly error message.</pre>
<pre class="line after"><span class="ws">    </span>callback = resolver.resolve_error_handler(500)</pre>
<pre class="line after"><span class="ws">    </span>return callback(request)</pre></div>
</div>

<li><div class="frame" id="frame-2302078421920">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django_extensions\management\technical_response.py"</cite>,
      line <em class="line">41</em>,
      in <code class="function">null_technical_500_response</code></h4>
  <div class="source "><pre class="line before"><span class="ws">    </span>try:</pre>
<pre class="line before"><span class="ws">        </span>if exc_value is None:</pre>
<pre class="line before"><span class="ws">            </span>exc_value = exc_type()</pre>
<pre class="line before"><span class="ws">        </span>if exc_value.__traceback__ is not tb:</pre>
<pre class="line before"><span class="ws">            </span>raise exc_value.with_traceback(tb)</pre>
<pre class="line current"><span class="ws">        </span>raise exc_value</pre>
<pre class="line after"><span class="ws">    </span>finally:</pre>
<pre class="line after"><span class="ws">        </span>exc_value = None</pre>
<pre class="line after"><span class="ws">        </span>tb = None</pre></div>
</div>

<li><div class="frame" id="frame-2302078422032">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py"</cite>,
      line <em class="line">55</em>,
      in <code class="function">inner</code></h4>
  <div class="source "><pre class="line before"><span class="ws">    </span>else:</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>@wraps(get_response)</pre>
<pre class="line before"><span class="ws">        </span>def inner(request):</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line current"><span class="ws">                </span>response = get_response(request)</pre>
<pre class="line after"><span class="ws">            </span>except Exception as exc:</pre>
<pre class="line after"><span class="ws">                </span>response = response_for_exception(request, exc)</pre>
<pre class="line after"><span class="ws">            </span>return response</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>return inner</pre></div>
</div>

<li><div class="frame" id="frame-2302078422144">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\utils\deprecation.py"</cite>,
      line <em class="line">129</em>,
      in <code class="function">__call__</code></h4>
  <div class="source "><pre class="line before"><span class="ws">        </span>if self.async_mode:</pre>
<pre class="line before"><span class="ws">            </span>return self.__acall__(request)</pre>
<pre class="line before"><span class="ws">        </span>response = None</pre>
<pre class="line before"><span class="ws">        </span>if hasattr(self, &#34;process_request&#34;):</pre>
<pre class="line before"><span class="ws">            </span>response = self.process_request(request)</pre>
<pre class="line current"><span class="ws">        </span>response = response or self.get_response(request)</pre>
<pre class="line after"><span class="ws">        </span>if hasattr(self, &#34;process_response&#34;):</pre>
<pre class="line after"><span class="ws">            </span>response = self.process_response(request, response)</pre>
<pre class="line after"><span class="ws">        </span>return response</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>async def __acall__(self, request):</pre></div>
</div>

<li><div class="frame" id="frame-2302078422256">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py"</cite>,
      line <em class="line">57</em>,
      in <code class="function">inner</code></h4>
  <div class="source "><pre class="line before"><span class="ws">        </span>@wraps(get_response)</pre>
<pre class="line before"><span class="ws">        </span>def inner(request):</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>response = get_response(request)</pre>
<pre class="line before"><span class="ws">            </span>except Exception as exc:</pre>
<pre class="line current"><span class="ws">                </span>response = response_for_exception(request, exc)</pre>
<pre class="line after"><span class="ws">            </span>return response</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>return inner</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span> </pre></div>
</div>

<li><div class="frame" id="frame-2302078422368">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py"</cite>,
      line <em class="line">140</em>,
      in <code class="function">response_for_exception</code></h4>
  <div class="source "><pre class="line before"><span class="ws">                </span>request, get_resolver(get_urlconf()), 400, exc</pre>
<pre class="line before"><span class="ws">            </span>)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>else:</pre>
<pre class="line before"><span class="ws">        </span>signals.got_request_exception.send(sender=None, request=request)</pre>
<pre class="line current"><span class="ws">        </span>response = handle_uncaught_exception(</pre>
<pre class="line after"><span class="ws">            </span>request, get_resolver(get_urlconf()), sys.exc_info()</pre>
<pre class="line after"><span class="ws">        </span>)</pre>
<pre class="line after"><span class="ws">        </span>log_response(</pre>
<pre class="line after"><span class="ws">            </span>&#34;%s: %s&#34;,</pre>
<pre class="line after"><span class="ws">            </span>response.reason_phrase,</pre></div>
</div>

<li><div class="frame" id="frame-2302078422480">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py"</cite>,
      line <em class="line">181</em>,
      in <code class="function">handle_uncaught_exception</code></h4>
  <div class="source "><pre class="line before"><span class="ws">    </span>&#34;&#34;&#34;</pre>
<pre class="line before"><span class="ws">    </span>if settings.DEBUG_PROPAGATE_EXCEPTIONS:</pre>
<pre class="line before"><span class="ws">        </span>raise</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>if settings.DEBUG:</pre>
<pre class="line current"><span class="ws">        </span>return debug.technical_500_response(request, *exc_info)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span># Return an HttpResponse that displays a friendly error message.</pre>
<pre class="line after"><span class="ws">    </span>callback = resolver.resolve_error_handler(500)</pre>
<pre class="line after"><span class="ws">    </span>return callback(request)</pre></div>
</div>

<li><div class="frame" id="frame-2302078422592">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django_extensions\management\technical_response.py"</cite>,
      line <em class="line">41</em>,
      in <code class="function">null_technical_500_response</code></h4>
  <div class="source "><pre class="line before"><span class="ws">    </span>try:</pre>
<pre class="line before"><span class="ws">        </span>if exc_value is None:</pre>
<pre class="line before"><span class="ws">            </span>exc_value = exc_type()</pre>
<pre class="line before"><span class="ws">        </span>if exc_value.__traceback__ is not tb:</pre>
<pre class="line before"><span class="ws">            </span>raise exc_value.with_traceback(tb)</pre>
<pre class="line current"><span class="ws">        </span>raise exc_value</pre>
<pre class="line after"><span class="ws">    </span>finally:</pre>
<pre class="line after"><span class="ws">        </span>exc_value = None</pre>
<pre class="line after"><span class="ws">        </span>tb = None</pre></div>
</div>

<li><div class="frame" id="frame-2302078422704">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py"</cite>,
      line <em class="line">55</em>,
      in <code class="function">inner</code></h4>
  <div class="source "><pre class="line before"><span class="ws">    </span>else:</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>@wraps(get_response)</pre>
<pre class="line before"><span class="ws">        </span>def inner(request):</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line current"><span class="ws">                </span>response = get_response(request)</pre>
<pre class="line after"><span class="ws">            </span>except Exception as exc:</pre>
<pre class="line after"><span class="ws">                </span>response = response_for_exception(request, exc)</pre>
<pre class="line after"><span class="ws">            </span>return response</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>return inner</pre></div>
</div>

<li><div class="frame" id="frame-2302078422816">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\utils\deprecation.py"</cite>,
      line <em class="line">131</em>,
      in <code class="function">__call__</code></h4>
  <div class="source "><pre class="line before"><span class="ws">        </span>response = None</pre>
<pre class="line before"><span class="ws">        </span>if hasattr(self, &#34;process_request&#34;):</pre>
<pre class="line before"><span class="ws">            </span>response = self.process_request(request)</pre>
<pre class="line before"><span class="ws">        </span>response = response or self.get_response(request)</pre>
<pre class="line before"><span class="ws">        </span>if hasattr(self, &#34;process_response&#34;):</pre>
<pre class="line current"><span class="ws">            </span>response = self.process_response(request, response)</pre>
<pre class="line after"><span class="ws">        </span>return response</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>async def __acall__(self, request):</pre>
<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line after"><span class="ws">        </span>Async version of __call__ that is swapped in when an async request</pre></div>
</div>

<li><div class="frame" id="frame-2302078422928">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\middleware\common.py"</cite>,
      line <em class="line">108</em>,
      in <code class="function">process_response</code></h4>
  <div class="source "><pre class="line before"><span class="ws">        </span>with an appended slash if should_redirect_with_slash() returns True.</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line before"><span class="ws">        </span># If the given URL is &#34;Not Found&#34;, then check if we should redirect to</pre>
<pre class="line before"><span class="ws">        </span># a path with a slash appended.</pre>
<pre class="line before"><span class="ws">        </span>if response.status_code == 404 and self.should_redirect_with_slash(request):</pre>
<pre class="line current"><span class="ws">            </span>return self.response_redirect_class(self.get_full_path_with_slash(request))</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span># Add the Content-Length header to non-streaming responses if not</pre>
<pre class="line after"><span class="ws">        </span># already set.</pre>
<pre class="line after"><span class="ws">        </span>if not response.streaming and not response.has_header(&#34;Content-Length&#34;):</pre>
<pre class="line after"><span class="ws">            </span>response.headers[&#34;Content-Length&#34;] = str(len(response.content))</pre></div>
</div>

<li><div class="frame" id="frame-2302078426176">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\middleware\common.py"</cite>,
      line <em class="line">87</em>,
      in <code class="function">get_full_path_with_slash</code></h4>
  <div class="source "><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line before"><span class="ws">        </span>new_path = request.get_full_path(force_append_slash=True)</pre>
<pre class="line before"><span class="ws">        </span># Prevent construction of scheme relative urls.</pre>
<pre class="line before"><span class="ws">        </span>new_path = escape_leading_slashes(new_path)</pre>
<pre class="line before"><span class="ws">        </span>if settings.DEBUG and request.method in (&#34;DELETE&#34;, &#34;POST&#34;, &#34;PUT&#34;, &#34;PATCH&#34;):</pre>
<pre class="line current"><span class="ws">            </span>raise RuntimeError(</pre>
<pre class="line after"><span class="ws">                </span>&#34;You called this URL via %(method)s, but the URL doesn&#39;t end &#34;</pre>
<pre class="line after"><span class="ws">                </span>&#34;in a slash and you have APPEND_SLASH set. Django can&#39;t &#34;</pre>
<pre class="line after"><span class="ws">                </span>&#34;redirect to the slash URL while maintaining %(method)s data. &#34;</pre>
<pre class="line after"><span class="ws">                </span>&#34;Change your form to point to %(url)s (note the trailing &#34;</pre>
<pre class="line after"><span class="ws">                </span>&#34;slash), or set APPEND_SLASH=False in your Django settings.&#34;</pre></div>
</div>
</ul>
  <blockquote>RuntimeError: You called this URL via PATCH, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PATCH data. Change your form to point to 127.0.0.1:8000/message-service-api/ai-message/update/57dc902e-4449-4083-9b56-000000000002/aa952552-33d8-42ee-94df-c680b366e8fb/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.
</blockquote>
</div>

<div class="plain">
    <p>
      This is the Copy/Paste friendly version of the traceback.
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\contrib\staticfiles\handlers.py&#34;, line 80, in __call__
    return self.application(environ, start_response)
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\wsgi.py&#34;, line 124, in __call__
    response = self.get_response(request)
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\base.py&#34;, line 140, in get_response
    response = self._middleware_chain(request)
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py&#34;, line 57, in inner
    response = response_for_exception(request, exc)
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py&#34;, line 140, in response_for_exception
    response = handle_uncaught_exception(
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py&#34;, line 181, in handle_uncaught_exception
    return debug.technical_500_response(request, *exc_info)
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django_extensions\management\technical_response.py&#34;, line 41, in null_technical_500_response
    raise exc_value
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py&#34;, line 55, in inner
    response = get_response(request)
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\corsheaders\middleware.py&#34;, line 56, in __call__
    result = self.get_response(request)
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py&#34;, line 57, in inner
    response = response_for_exception(request, exc)
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py&#34;, line 140, in response_for_exception
    response = handle_uncaught_exception(
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py&#34;, line 181, in handle_uncaught_exception
    return debug.technical_500_response(request, *exc_info)
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django_extensions\management\technical_response.py&#34;, line 41, in null_technical_500_response
    raise exc_value
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py&#34;, line 55, in inner
    response = get_response(request)
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\utils\deprecation.py&#34;, line 129, in __call__
    response = response or self.get_response(request)
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py&#34;, line 57, in inner
    response = response_for_exception(request, exc)
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py&#34;, line 140, in response_for_exception
    response = handle_uncaught_exception(
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py&#34;, line 181, in handle_uncaught_exception
    return debug.technical_500_response(request, *exc_info)
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django_extensions\management\technical_response.py&#34;, line 41, in null_technical_500_response
    raise exc_value
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py&#34;, line 55, in inner
    response = get_response(request)
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\utils\deprecation.py&#34;, line 129, in __call__
    response = response or self.get_response(request)
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py&#34;, line 57, in inner
    response = response_for_exception(request, exc)
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py&#34;, line 140, in response_for_exception
    response = handle_uncaught_exception(
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py&#34;, line 181, in handle_uncaught_exception
    return debug.technical_500_response(request, *exc_info)
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django_extensions\management\technical_response.py&#34;, line 41, in null_technical_500_response
    raise exc_value
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py&#34;, line 55, in inner
    response = get_response(request)
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\utils\deprecation.py&#34;, line 131, in __call__
    response = self.process_response(request, response)
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\middleware\common.py&#34;, line 108, in process_response
    return self.response_redirect_class(self.get_full_path_with_slash(request))
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\middleware\common.py&#34;, line 87, in get_full_path_with_slash
    raise RuntimeError(
RuntimeError: You called this URL via PATCH, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PATCH data. Change your form to point to 127.0.0.1:8000/message-service-api/ai-message/update/57dc902e-4449-4083-9b56-000000000002/aa952552-33d8-42ee-94df-c680b366e8fb/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.
</textarea>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\contrib\staticfiles\handlers.py", line 80, in __call__
    return self.application(environ, start_response)
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\wsgi.py", line 124, in __call__
    response = self.get_response(request)
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\base.py", line 140, in get_response
    response = self._middleware_chain(request)
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py", line 57, in inner
    response = response_for_exception(request, exc)
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py", line 140, in response_for_exception
    response = handle_uncaught_exception(
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py", line 181, in handle_uncaught_exception
    return debug.technical_500_response(request, *exc_info)
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django_extensions\management\technical_response.py", line 41, in null_technical_500_response
    raise exc_value
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\corsheaders\middleware.py", line 56, in __call__
    result = self.get_response(request)
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py", line 57, in inner
    response = response_for_exception(request, exc)
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py", line 140, in response_for_exception
    response = handle_uncaught_exception(
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py", line 181, in handle_uncaught_exception
    return debug.technical_500_response(request, *exc_info)
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django_extensions\management\technical_response.py", line 41, in null_technical_500_response
    raise exc_value
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\utils\deprecation.py", line 129, in __call__
    response = response or self.get_response(request)
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py", line 57, in inner
    response = response_for_exception(request, exc)
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py", line 140, in response_for_exception
    response = handle_uncaught_exception(
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py", line 181, in handle_uncaught_exception
    return debug.technical_500_response(request, *exc_info)
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django_extensions\management\technical_response.py", line 41, in null_technical_500_response
    raise exc_value
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\utils\deprecation.py", line 129, in __call__
    response = response or self.get_response(request)
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py", line 57, in inner
    response = response_for_exception(request, exc)
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py", line 140, in response_for_exception
    response = handle_uncaught_exception(
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py", line 181, in handle_uncaught_exception
    return debug.technical_500_response(request, *exc_info)
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django_extensions\management\technical_response.py", line 41, in null_technical_500_response
    raise exc_value
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\utils\deprecation.py", line 131, in __call__
    response = self.process_response(request, response)
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\middleware\common.py", line 108, in process_response
    return self.response_redirect_class(self.get_full_path_with_slash(request))
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\middleware\common.py", line 87, in get_full_path_with_slash
    raise RuntimeError(
RuntimeError: You called this URL via PATCH, but the URL doesn't end in a slash and you have APPEND_SLASH set. Django can't redirect to the slash URL while maintaining PATCH data. Change your form to point to 127.0.0.1:8000/message-service-api/ai-message/update/57dc902e-4449-4083-9b56-000000000002/aa952552-33d8-42ee-94df-c680b366e8fb/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.


-->

2025-06-06 10:53:03 | INFO | PID:18172 | Making PATCH request to /message-service-api/ai-message/update/57dc902e-4449-4083-9b56-000000000002/aa952552-33d8-42ee-94df-c680b366e8fb (Attempt 2/3)
2025-06-06 10:53:04 | WARNING | PID:18172 | Attempt 2 failed: Request failed with status 500: <!doctype html>
<html lang=en>
  <head>
    <title>RuntimeError: You called this URL via PATCH, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PATCH data. Change your form to point to 127.0.0.1:8000/message-service-api/ai-message/update/57dc902e-4449-4083-9b56-000000000002/aa952552-33d8-42ee-94df-c680b366e8fb/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css">
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script>
      var CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "JZuc5Nybhq6WZU27qjrX";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>RuntimeError</h1>
<div class="detail">
  <p class="errormsg">RuntimeError: You called this URL via PATCH, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PATCH data. Change your form to point to 127.0.0.1:8000/message-service-api/ai-message/update/57dc902e-4449-4083-9b56-000000000002/aa952552-33d8-42ee-94df-c680b366e8fb/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.
</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  <h3></h3>
  <ul><li><div class="frame" id="frame-2302078430208">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\contrib\staticfiles\handlers.py"</cite>,
      line <em class="line">80</em>,
      in <code class="function">__call__</code></h4>
  <div class="source "><pre class="line before"><span class="ws">        </span>self.base_url = urlparse(self.get_base_url())</pre>
<pre class="line before"><span class="ws">        </span>super().__init__()</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def __call__(self, environ, start_response):</pre>
<pre class="line before"><span class="ws">        </span>if not self._should_handle(get_path_info(environ)):</pre>
<pre class="line current"><span class="ws">            </span>return self.application(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>return super().__call__(environ, start_response)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span>class ASGIStaticFilesHandler(StaticFilesHandlerMixin, ASGIHandler):</pre>
<pre class="line after"><span class="ws">    </span>&#34;&#34;&#34;</pre></div>
</div>

<li><div class="frame" id="frame-2302078429760">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\wsgi.py"</cite>,
      line <em class="line">124</em>,
      in <code class="function">__call__</code></h4>
  <div class="source "><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def __call__(self, environ, start_response):</pre>
<pre class="line before"><span class="ws">        </span>set_script_prefix(get_script_name(environ))</pre>
<pre class="line before"><span class="ws">        </span>signals.request_started.send(sender=self.__class__, environ=environ)</pre>
<pre class="line before"><span class="ws">        </span>request = self.request_class(environ)</pre>
<pre class="line current"><span class="ws">        </span>response = self.get_response(request)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>response._handler_class = self.__class__</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>status = &#34;%d %s&#34; % (response.status_code, response.reason_phrase)</pre>
<pre class="line after"><span class="ws">        </span>response_headers = [</pre></div>
</div>

<li><div class="frame" id="frame-2302078429648">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\base.py"</cite>,
      line <em class="line">140</em>,
      in <code class="function">get_response</code></h4>
  <div class="source "><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def get_response(self, request):</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;Return an HttpResponse object for the given HttpRequest.&#34;&#34;&#34;</pre>
<pre class="line before"><span class="ws">        </span># Setup default url resolver for this thread</pre>
<pre class="line before"><span class="ws">        </span>set_urlconf(settings.ROOT_URLCONF)</pre>
<pre class="line current"><span class="ws">        </span>response = self._middleware_chain(request)</pre>
<pre class="line after"><span class="ws">        </span>response._resource_closers.append(request.close)</pre>
<pre class="line after"><span class="ws">        </span>if response.status_code &gt;= 400:</pre>
<pre class="line after"><span class="ws">            </span>log_response(</pre>
<pre class="line after"><span class="ws">                </span>&#34;%s: %s&#34;,</pre>
<pre class="line after"><span class="ws">                </span>response.reason_phrase,</pre></div>
</div>

<li><div class="frame" id="frame-2302078427184">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py"</cite>,
      line <em class="line">57</em>,
      in <code class="function">inner</code></h4>
  <div class="source "><pre class="line before"><span class="ws">        </span>@wraps(get_response)</pre>
<pre class="line before"><span class="ws">        </span>def inner(request):</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>response = get_response(request)</pre>
<pre class="line before"><span class="ws">            </span>except Exception as exc:</pre>
<pre class="line current"><span class="ws">                </span>response = response_for_exception(request, exc)</pre>
<pre class="line after"><span class="ws">            </span>return response</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>return inner</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span> </pre></div>
</div>

<li><div class="frame" id="frame-2302078426960">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py"</cite>,
      line <em class="line">140</em>,
      in <code class="function">response_for_exception</code></h4>
  <div class="source "><pre class="line before"><span class="ws">                </span>request, get_resolver(get_urlconf()), 400, exc</pre>
<pre class="line before"><span class="ws">            </span>)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>else:</pre>
<pre class="line before"><span class="ws">        </span>signals.got_request_exception.send(sender=None, request=request)</pre>
<pre class="line current"><span class="ws">        </span>response = handle_uncaught_exception(</pre>
<pre class="line after"><span class="ws">            </span>request, get_resolver(get_urlconf()), sys.exc_info()</pre>
<pre class="line after"><span class="ws">        </span>)</pre>
<pre class="line after"><span class="ws">        </span>log_response(</pre>
<pre class="line after"><span class="ws">            </span>&#34;%s: %s&#34;,</pre>
<pre class="line after"><span class="ws">            </span>response.reason_phrase,</pre></div>
</div>

<li><div class="frame" id="frame-2302078427072">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py"</cite>,
      line <em class="line">181</em>,
      in <code class="function">handle_uncaught_exception</code></h4>
  <div class="source "><pre class="line before"><span class="ws">    </span>&#34;&#34;&#34;</pre>
<pre class="line before"><span class="ws">    </span>if settings.DEBUG_PROPAGATE_EXCEPTIONS:</pre>
<pre class="line before"><span class="ws">        </span>raise</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>if settings.DEBUG:</pre>
<pre class="line current"><span class="ws">        </span>return debug.technical_500_response(request, *exc_info)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span># Return an HttpResponse that displays a friendly error message.</pre>
<pre class="line after"><span class="ws">    </span>callback = resolver.resolve_error_handler(500)</pre>
<pre class="line after"><span class="ws">    </span>return callback(request)</pre></div>
</div>

<li><div class="frame" id="frame-2302078426848">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django_extensions\management\technical_response.py"</cite>,
      line <em class="line">41</em>,
      in <code class="function">null_technical_500_response</code></h4>
  <div class="source "><pre class="line before"><span class="ws">    </span>try:</pre>
<pre class="line before"><span class="ws">        </span>if exc_value is None:</pre>
<pre class="line before"><span class="ws">            </span>exc_value = exc_type()</pre>
<pre class="line before"><span class="ws">        </span>if exc_value.__traceback__ is not tb:</pre>
<pre class="line before"><span class="ws">            </span>raise exc_value.with_traceback(tb)</pre>
<pre class="line current"><span class="ws">        </span>raise exc_value</pre>
<pre class="line after"><span class="ws">    </span>finally:</pre>
<pre class="line after"><span class="ws">        </span>exc_value = None</pre>
<pre class="line after"><span class="ws">        </span>tb = None</pre></div>
</div>

<li><div class="frame" id="frame-2302078435136">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py"</cite>,
      line <em class="line">55</em>,
      in <code class="function">inner</code></h4>
  <div class="source "><pre class="line before"><span class="ws">    </span>else:</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>@wraps(get_response)</pre>
<pre class="line before"><span class="ws">        </span>def inner(request):</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line current"><span class="ws">                </span>response = get_response(request)</pre>
<pre class="line after"><span class="ws">            </span>except Exception as exc:</pre>
<pre class="line after"><span class="ws">                </span>response = response_for_exception(request, exc)</pre>
<pre class="line after"><span class="ws">            </span>return response</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>return inner</pre></div>
</div>

<li><div class="frame" id="frame-2302078426624">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\corsheaders\middleware.py"</cite>,
      line <em class="line">56</em>,
      in <code class="function">__call__</code></h4>
  <div class="source "><pre class="line before"><span class="ws">    </span>) -&gt; HttpResponseBase | Awaitable[HttpResponseBase]:</pre>
<pre class="line before"><span class="ws">        </span>if self.async_mode:</pre>
<pre class="line before"><span class="ws">            </span>return self.__acall__(request)</pre>
<pre class="line before"><span class="ws">        </span>response: HttpResponseBase | None = self.check_preflight(request)</pre>
<pre class="line before"><span class="ws">        </span>if response is None:</pre>
<pre class="line current"><span class="ws">            </span>result = self.get_response(request)</pre>
<pre class="line after"><span class="ws">            </span>assert isinstance(result, HttpResponseBase)</pre>
<pre class="line after"><span class="ws">            </span>response = result</pre>
<pre class="line after"><span class="ws">        </span>self.add_response_headers(request, response)</pre>
<pre class="line after"><span class="ws">        </span>return response</pre>
<pre class="line after"><span class="ws"></span> </pre></div>
</div>

<li><div class="frame" id="frame-2302078426736">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py"</cite>,
      line <em class="line">57</em>,
      in <code class="function">inner</code></h4>
  <div class="source "><pre class="line before"><span class="ws">        </span>@wraps(get_response)</pre>
<pre class="line before"><span class="ws">        </span>def inner(request):</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>response = get_response(request)</pre>
<pre class="line before"><span class="ws">            </span>except Exception as exc:</pre>
<pre class="line current"><span class="ws">                </span>response = response_for_exception(request, exc)</pre>
<pre class="line after"><span class="ws">            </span>return response</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>return inner</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span> </pre></div>
</div>

<li><div class="frame" id="frame-2302078429872">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py"</cite>,
      line <em class="line">140</em>,
      in <code class="function">response_for_exception</code></h4>
  <div class="source "><pre class="line before"><span class="ws">                </span>request, get_resolver(get_urlconf()), 400, exc</pre>
<pre class="line before"><span class="ws">            </span>)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>else:</pre>
<pre class="line before"><span class="ws">        </span>signals.got_request_exception.send(sender=None, request=request)</pre>
<pre class="line current"><span class="ws">        </span>response = handle_uncaught_exception(</pre>
<pre class="line after"><span class="ws">            </span>request, get_resolver(get_urlconf()), sys.exc_info()</pre>
<pre class="line after"><span class="ws">        </span>)</pre>
<pre class="line after"><span class="ws">        </span>log_response(</pre>
<pre class="line after"><span class="ws">            </span>&#34;%s: %s&#34;,</pre>
<pre class="line after"><span class="ws">            </span>response.reason_phrase,</pre></div>
</div>

<li><div class="frame" id="frame-2302078430320">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py"</cite>,
      line <em class="line">181</em>,
      in <code class="function">handle_uncaught_exception</code></h4>
  <div class="source "><pre class="line before"><span class="ws">    </span>&#34;&#34;&#34;</pre>
<pre class="line before"><span class="ws">    </span>if settings.DEBUG_PROPAGATE_EXCEPTIONS:</pre>
<pre class="line before"><span class="ws">        </span>raise</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>if settings.DEBUG:</pre>
<pre class="line current"><span class="ws">        </span>return debug.technical_500_response(request, *exc_info)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span># Return an HttpResponse that displays a friendly error message.</pre>
<pre class="line after"><span class="ws">    </span>callback = resolver.resolve_error_handler(500)</pre>
<pre class="line after"><span class="ws">    </span>return callback(request)</pre></div>
</div>

<li><div class="frame" id="frame-2302078430432">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django_extensions\management\technical_response.py"</cite>,
      line <em class="line">41</em>,
      in <code class="function">null_technical_500_response</code></h4>
  <div class="source "><pre class="line before"><span class="ws">    </span>try:</pre>
<pre class="line before"><span class="ws">        </span>if exc_value is None:</pre>
<pre class="line before"><span class="ws">            </span>exc_value = exc_type()</pre>
<pre class="line before"><span class="ws">        </span>if exc_value.__traceback__ is not tb:</pre>
<pre class="line before"><span class="ws">            </span>raise exc_value.with_traceback(tb)</pre>
<pre class="line current"><span class="ws">        </span>raise exc_value</pre>
<pre class="line after"><span class="ws">    </span>finally:</pre>
<pre class="line after"><span class="ws">        </span>exc_value = None</pre>
<pre class="line after"><span class="ws">        </span>tb = None</pre></div>
</div>

<li><div class="frame" id="frame-2302078430544">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py"</cite>,
      line <em class="line">55</em>,
      in <code class="function">inner</code></h4>
  <div class="source "><pre class="line before"><span class="ws">    </span>else:</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>@wraps(get_response)</pre>
<pre class="line before"><span class="ws">        </span>def inner(request):</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line current"><span class="ws">                </span>response = get_response(request)</pre>
<pre class="line after"><span class="ws">            </span>except Exception as exc:</pre>
<pre class="line after"><span class="ws">                </span>response = response_for_exception(request, exc)</pre>
<pre class="line after"><span class="ws">            </span>return response</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>return inner</pre></div>
</div>

<li><div class="frame" id="frame-2302078430656">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\utils\deprecation.py"</cite>,
      line <em class="line">129</em>,
      in <code class="function">__call__</code></h4>
  <div class="source "><pre class="line before"><span class="ws">        </span>if self.async_mode:</pre>
<pre class="line before"><span class="ws">            </span>return self.__acall__(request)</pre>
<pre class="line before"><span class="ws">        </span>response = None</pre>
<pre class="line before"><span class="ws">        </span>if hasattr(self, &#34;process_request&#34;):</pre>
<pre class="line before"><span class="ws">            </span>response = self.process_request(request)</pre>
<pre class="line current"><span class="ws">        </span>response = response or self.get_response(request)</pre>
<pre class="line after"><span class="ws">        </span>if hasattr(self, &#34;process_response&#34;):</pre>
<pre class="line after"><span class="ws">            </span>response = self.process_response(request, response)</pre>
<pre class="line after"><span class="ws">        </span>return response</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>async def __acall__(self, request):</pre></div>
</div>

<li><div class="frame" id="frame-2302078430768">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py"</cite>,
      line <em class="line">57</em>,
      in <code class="function">inner</code></h4>
  <div class="source "><pre class="line before"><span class="ws">        </span>@wraps(get_response)</pre>
<pre class="line before"><span class="ws">        </span>def inner(request):</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>response = get_response(request)</pre>
<pre class="line before"><span class="ws">            </span>except Exception as exc:</pre>
<pre class="line current"><span class="ws">                </span>response = response_for_exception(request, exc)</pre>
<pre class="line after"><span class="ws">            </span>return response</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>return inner</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span> </pre></div>
</div>

<li><div class="frame" id="frame-2302078430880">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py"</cite>,
      line <em class="line">140</em>,
      in <code class="function">response_for_exception</code></h4>
  <div class="source "><pre class="line before"><span class="ws">                </span>request, get_resolver(get_urlconf()), 400, exc</pre>
<pre class="line before"><span class="ws">            </span>)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>else:</pre>
<pre class="line before"><span class="ws">        </span>signals.got_request_exception.send(sender=None, request=request)</pre>
<pre class="line current"><span class="ws">        </span>response = handle_uncaught_exception(</pre>
<pre class="line after"><span class="ws">            </span>request, get_resolver(get_urlconf()), sys.exc_info()</pre>
<pre class="line after"><span class="ws">        </span>)</pre>
<pre class="line after"><span class="ws">        </span>log_response(</pre>
<pre class="line after"><span class="ws">            </span>&#34;%s: %s&#34;,</pre>
<pre class="line after"><span class="ws">            </span>response.reason_phrase,</pre></div>
</div>

<li><div class="frame" id="frame-2302078430992">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py"</cite>,
      line <em class="line">181</em>,
      in <code class="function">handle_uncaught_exception</code></h4>
  <div class="source "><pre class="line before"><span class="ws">    </span>&#34;&#34;&#34;</pre>
<pre class="line before"><span class="ws">    </span>if settings.DEBUG_PROPAGATE_EXCEPTIONS:</pre>
<pre class="line before"><span class="ws">        </span>raise</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>if settings.DEBUG:</pre>
<pre class="line current"><span class="ws">        </span>return debug.technical_500_response(request, *exc_info)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span># Return an HttpResponse that displays a friendly error message.</pre>
<pre class="line after"><span class="ws">    </span>callback = resolver.resolve_error_handler(500)</pre>
<pre class="line after"><span class="ws">    </span>return callback(request)</pre></div>
</div>

<li><div class="frame" id="frame-2302078431104">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django_extensions\management\technical_response.py"</cite>,
      line <em class="line">41</em>,
      in <code class="function">null_technical_500_response</code></h4>
  <div class="source "><pre class="line before"><span class="ws">    </span>try:</pre>
<pre class="line before"><span class="ws">        </span>if exc_value is None:</pre>
<pre class="line before"><span class="ws">            </span>exc_value = exc_type()</pre>
<pre class="line before"><span class="ws">        </span>if exc_value.__traceback__ is not tb:</pre>
<pre class="line before"><span class="ws">            </span>raise exc_value.with_traceback(tb)</pre>
<pre class="line current"><span class="ws">        </span>raise exc_value</pre>
<pre class="line after"><span class="ws">    </span>finally:</pre>
<pre class="line after"><span class="ws">        </span>exc_value = None</pre>
<pre class="line after"><span class="ws">        </span>tb = None</pre></div>
</div>

<li><div class="frame" id="frame-2302078431216">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py"</cite>,
      line <em class="line">55</em>,
      in <code class="function">inner</code></h4>
  <div class="source "><pre class="line before"><span class="ws">    </span>else:</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>@wraps(get_response)</pre>
<pre class="line before"><span class="ws">        </span>def inner(request):</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line current"><span class="ws">                </span>response = get_response(request)</pre>
<pre class="line after"><span class="ws">            </span>except Exception as exc:</pre>
<pre class="line after"><span class="ws">                </span>response = response_for_exception(request, exc)</pre>
<pre class="line after"><span class="ws">            </span>return response</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>return inner</pre></div>
</div>

<li><div class="frame" id="frame-2302078426288">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\utils\deprecation.py"</cite>,
      line <em class="line">129</em>,
      in <code class="function">__call__</code></h4>
  <div class="source "><pre class="line before"><span class="ws">        </span>if self.async_mode:</pre>
<pre class="line before"><span class="ws">            </span>return self.__acall__(request)</pre>
<pre class="line before"><span class="ws">        </span>response = None</pre>
<pre class="line before"><span class="ws">        </span>if hasattr(self, &#34;process_request&#34;):</pre>
<pre class="line before"><span class="ws">            </span>response = self.process_request(request)</pre>
<pre class="line current"><span class="ws">        </span>response = response or self.get_response(request)</pre>
<pre class="line after"><span class="ws">        </span>if hasattr(self, &#34;process_response&#34;):</pre>
<pre class="line after"><span class="ws">            </span>response = self.process_response(request, response)</pre>
<pre class="line after"><span class="ws">        </span>return response</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>async def __acall__(self, request):</pre></div>
</div>

<li><div class="frame" id="frame-2302078426512">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py"</cite>,
      line <em class="line">57</em>,
      in <code class="function">inner</code></h4>
  <div class="source "><pre class="line before"><span class="ws">        </span>@wraps(get_response)</pre>
<pre class="line before"><span class="ws">        </span>def inner(request):</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>response = get_response(request)</pre>
<pre class="line before"><span class="ws">            </span>except Exception as exc:</pre>
<pre class="line current"><span class="ws">                </span>response = response_for_exception(request, exc)</pre>
<pre class="line after"><span class="ws">            </span>return response</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>return inner</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span> </pre></div>
</div>

<li><div class="frame" id="frame-2302078426400">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py"</cite>,
      line <em class="line">140</em>,
      in <code class="function">response_for_exception</code></h4>
  <div class="source "><pre class="line before"><span class="ws">                </span>request, get_resolver(get_urlconf()), 400, exc</pre>
<pre class="line before"><span class="ws">            </span>)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>else:</pre>
<pre class="line before"><span class="ws">        </span>signals.got_request_exception.send(sender=None, request=request)</pre>
<pre class="line current"><span class="ws">        </span>response = handle_uncaught_exception(</pre>
<pre class="line after"><span class="ws">            </span>request, get_resolver(get_urlconf()), sys.exc_info()</pre>
<pre class="line after"><span class="ws">        </span>)</pre>
<pre class="line after"><span class="ws">        </span>log_response(</pre>
<pre class="line after"><span class="ws">            </span>&#34;%s: %s&#34;,</pre>
<pre class="line after"><span class="ws">            </span>response.reason_phrase,</pre></div>
</div>

<li><div class="frame" id="frame-2302078431328">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py"</cite>,
      line <em class="line">181</em>,
      in <code class="function">handle_uncaught_exception</code></h4>
  <div class="source "><pre class="line before"><span class="ws">    </span>&#34;&#34;&#34;</pre>
<pre class="line before"><span class="ws">    </span>if settings.DEBUG_PROPAGATE_EXCEPTIONS:</pre>
<pre class="line before"><span class="ws">        </span>raise</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>if settings.DEBUG:</pre>
<pre class="line current"><span class="ws">        </span>return debug.technical_500_response(request, *exc_info)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span># Return an HttpResponse that displays a friendly error message.</pre>
<pre class="line after"><span class="ws">    </span>callback = resolver.resolve_error_handler(500)</pre>
<pre class="line after"><span class="ws">    </span>return callback(request)</pre></div>
</div>

<li><div class="frame" id="frame-2302078431440">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django_extensions\management\technical_response.py"</cite>,
      line <em class="line">41</em>,
      in <code class="function">null_technical_500_response</code></h4>
  <div class="source "><pre class="line before"><span class="ws">    </span>try:</pre>
<pre class="line before"><span class="ws">        </span>if exc_value is None:</pre>
<pre class="line before"><span class="ws">            </span>exc_value = exc_type()</pre>
<pre class="line before"><span class="ws">        </span>if exc_value.__traceback__ is not tb:</pre>
<pre class="line before"><span class="ws">            </span>raise exc_value.with_traceback(tb)</pre>
<pre class="line current"><span class="ws">        </span>raise exc_value</pre>
<pre class="line after"><span class="ws">    </span>finally:</pre>
<pre class="line after"><span class="ws">        </span>exc_value = None</pre>
<pre class="line after"><span class="ws">        </span>tb = None</pre></div>
</div>

<li><div class="frame" id="frame-2302078431552">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py"</cite>,
      line <em class="line">55</em>,
      in <code class="function">inner</code></h4>
  <div class="source "><pre class="line before"><span class="ws">    </span>else:</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>@wraps(get_response)</pre>
<pre class="line before"><span class="ws">        </span>def inner(request):</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line current"><span class="ws">                </span>response = get_response(request)</pre>
<pre class="line after"><span class="ws">            </span>except Exception as exc:</pre>
<pre class="line after"><span class="ws">                </span>response = response_for_exception(request, exc)</pre>
<pre class="line after"><span class="ws">            </span>return response</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>return inner</pre></div>
</div>

<li><div class="frame" id="frame-2302078429200">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\utils\deprecation.py"</cite>,
      line <em class="line">131</em>,
      in <code class="function">__call__</code></h4>
  <div class="source "><pre class="line before"><span class="ws">        </span>response = None</pre>
<pre class="line before"><span class="ws">        </span>if hasattr(self, &#34;process_request&#34;):</pre>
<pre class="line before"><span class="ws">            </span>response = self.process_request(request)</pre>
<pre class="line before"><span class="ws">        </span>response = response or self.get_response(request)</pre>
<pre class="line before"><span class="ws">        </span>if hasattr(self, &#34;process_response&#34;):</pre>
<pre class="line current"><span class="ws">            </span>response = self.process_response(request, response)</pre>
<pre class="line after"><span class="ws">        </span>return response</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>async def __acall__(self, request):</pre>
<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line after"><span class="ws">        </span>Async version of __call__ that is swapped in when an async request</pre></div>
</div>

<li><div class="frame" id="frame-2302078429312">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\middleware\common.py"</cite>,
      line <em class="line">108</em>,
      in <code class="function">process_response</code></h4>
  <div class="source "><pre class="line before"><span class="ws">        </span>with an appended slash if should_redirect_with_slash() returns True.</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line before"><span class="ws">        </span># If the given URL is &#34;Not Found&#34;, then check if we should redirect to</pre>
<pre class="line before"><span class="ws">        </span># a path with a slash appended.</pre>
<pre class="line before"><span class="ws">        </span>if response.status_code == 404 and self.should_redirect_with_slash(request):</pre>
<pre class="line current"><span class="ws">            </span>return self.response_redirect_class(self.get_full_path_with_slash(request))</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span># Add the Content-Length header to non-streaming responses if not</pre>
<pre class="line after"><span class="ws">        </span># already set.</pre>
<pre class="line after"><span class="ws">        </span>if not response.streaming and not response.has_header(&#34;Content-Length&#34;):</pre>
<pre class="line after"><span class="ws">            </span>response.headers[&#34;Content-Length&#34;] = str(len(response.content))</pre></div>
</div>

<li><div class="frame" id="frame-2302078429424">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\middleware\common.py"</cite>,
      line <em class="line">87</em>,
      in <code class="function">get_full_path_with_slash</code></h4>
  <div class="source "><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line before"><span class="ws">        </span>new_path = request.get_full_path(force_append_slash=True)</pre>
<pre class="line before"><span class="ws">        </span># Prevent construction of scheme relative urls.</pre>
<pre class="line before"><span class="ws">        </span>new_path = escape_leading_slashes(new_path)</pre>
<pre class="line before"><span class="ws">        </span>if settings.DEBUG and request.method in (&#34;DELETE&#34;, &#34;POST&#34;, &#34;PUT&#34;, &#34;PATCH&#34;):</pre>
<pre class="line current"><span class="ws">            </span>raise RuntimeError(</pre>
<pre class="line after"><span class="ws">                </span>&#34;You called this URL via %(method)s, but the URL doesn&#39;t end &#34;</pre>
<pre class="line after"><span class="ws">                </span>&#34;in a slash and you have APPEND_SLASH set. Django can&#39;t &#34;</pre>
<pre class="line after"><span class="ws">                </span>&#34;redirect to the slash URL while maintaining %(method)s data. &#34;</pre>
<pre class="line after"><span class="ws">                </span>&#34;Change your form to point to %(url)s (note the trailing &#34;</pre>
<pre class="line after"><span class="ws">                </span>&#34;slash), or set APPEND_SLASH=False in your Django settings.&#34;</pre></div>
</div>
</ul>
  <blockquote>RuntimeError: You called this URL via PATCH, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PATCH data. Change your form to point to 127.0.0.1:8000/message-service-api/ai-message/update/57dc902e-4449-4083-9b56-000000000002/aa952552-33d8-42ee-94df-c680b366e8fb/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.
</blockquote>
</div>

<div class="plain">
    <p>
      This is the Copy/Paste friendly version of the traceback.
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\contrib\staticfiles\handlers.py&#34;, line 80, in __call__
    return self.application(environ, start_response)
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\wsgi.py&#34;, line 124, in __call__
    response = self.get_response(request)
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\base.py&#34;, line 140, in get_response
    response = self._middleware_chain(request)
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py&#34;, line 57, in inner
    response = response_for_exception(request, exc)
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py&#34;, line 140, in response_for_exception
    response = handle_uncaught_exception(
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py&#34;, line 181, in handle_uncaught_exception
    return debug.technical_500_response(request, *exc_info)
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django_extensions\management\technical_response.py&#34;, line 41, in null_technical_500_response
    raise exc_value
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py&#34;, line 55, in inner
    response = get_response(request)
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\corsheaders\middleware.py&#34;, line 56, in __call__
    result = self.get_response(request)
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py&#34;, line 57, in inner
    response = response_for_exception(request, exc)
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py&#34;, line 140, in response_for_exception
    response = handle_uncaught_exception(
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py&#34;, line 181, in handle_uncaught_exception
    return debug.technical_500_response(request, *exc_info)
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django_extensions\management\technical_response.py&#34;, line 41, in null_technical_500_response
    raise exc_value
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py&#34;, line 55, in inner
    response = get_response(request)
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\utils\deprecation.py&#34;, line 129, in __call__
    response = response or self.get_response(request)
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py&#34;, line 57, in inner
    response = response_for_exception(request, exc)
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py&#34;, line 140, in response_for_exception
    response = handle_uncaught_exception(
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py&#34;, line 181, in handle_uncaught_exception
    return debug.technical_500_response(request, *exc_info)
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django_extensions\management\technical_response.py&#34;, line 41, in null_technical_500_response
    raise exc_value
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py&#34;, line 55, in inner
    response = get_response(request)
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\utils\deprecation.py&#34;, line 129, in __call__
    response = response or self.get_response(request)
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py&#34;, line 57, in inner
    response = response_for_exception(request, exc)
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py&#34;, line 140, in response_for_exception
    response = handle_uncaught_exception(
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py&#34;, line 181, in handle_uncaught_exception
    return debug.technical_500_response(request, *exc_info)
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django_extensions\management\technical_response.py&#34;, line 41, in null_technical_500_response
    raise exc_value
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py&#34;, line 55, in inner
    response = get_response(request)
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\utils\deprecation.py&#34;, line 131, in __call__
    response = self.process_response(request, response)
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\middleware\common.py&#34;, line 108, in process_response
    return self.response_redirect_class(self.get_full_path_with_slash(request))
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\middleware\common.py&#34;, line 87, in get_full_path_with_slash
    raise RuntimeError(
RuntimeError: You called this URL via PATCH, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PATCH data. Change your form to point to 127.0.0.1:8000/message-service-api/ai-message/update/57dc902e-4449-4083-9b56-000000000002/aa952552-33d8-42ee-94df-c680b366e8fb/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.
</textarea>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\contrib\staticfiles\handlers.py", line 80, in __call__
    return self.application(environ, start_response)
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\wsgi.py", line 124, in __call__
    response = self.get_response(request)
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\base.py", line 140, in get_response
    response = self._middleware_chain(request)
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py", line 57, in inner
    response = response_for_exception(request, exc)
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py", line 140, in response_for_exception
    response = handle_uncaught_exception(
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py", line 181, in handle_uncaught_exception
    return debug.technical_500_response(request, *exc_info)
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django_extensions\management\technical_response.py", line 41, in null_technical_500_response
    raise exc_value
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\corsheaders\middleware.py", line 56, in __call__
    result = self.get_response(request)
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py", line 57, in inner
    response = response_for_exception(request, exc)
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py", line 140, in response_for_exception
    response = handle_uncaught_exception(
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py", line 181, in handle_uncaught_exception
    return debug.technical_500_response(request, *exc_info)
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django_extensions\management\technical_response.py", line 41, in null_technical_500_response
    raise exc_value
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\utils\deprecation.py", line 129, in __call__
    response = response or self.get_response(request)
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py", line 57, in inner
    response = response_for_exception(request, exc)
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py", line 140, in response_for_exception
    response = handle_uncaught_exception(
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py", line 181, in handle_uncaught_exception
    return debug.technical_500_response(request, *exc_info)
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django_extensions\management\technical_response.py", line 41, in null_technical_500_response
    raise exc_value
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\utils\deprecation.py", line 129, in __call__
    response = response or self.get_response(request)
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py", line 57, in inner
    response = response_for_exception(request, exc)
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py", line 140, in response_for_exception
    response = handle_uncaught_exception(
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py", line 181, in handle_uncaught_exception
    return debug.technical_500_response(request, *exc_info)
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django_extensions\management\technical_response.py", line 41, in null_technical_500_response
    raise exc_value
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\utils\deprecation.py", line 131, in __call__
    response = self.process_response(request, response)
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\middleware\common.py", line 108, in process_response
    return self.response_redirect_class(self.get_full_path_with_slash(request))
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\middleware\common.py", line 87, in get_full_path_with_slash
    raise RuntimeError(
RuntimeError: You called this URL via PATCH, but the URL doesn't end in a slash and you have APPEND_SLASH set. Django can't redirect to the slash URL while maintaining PATCH data. Change your form to point to 127.0.0.1:8000/message-service-api/ai-message/update/57dc902e-4449-4083-9b56-000000000002/aa952552-33d8-42ee-94df-c680b366e8fb/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.


-->

2025-06-06 10:53:06 | INFO | PID:18172 | Making PATCH request to /message-service-api/ai-message/update/57dc902e-4449-4083-9b56-000000000002/aa952552-33d8-42ee-94df-c680b366e8fb (Attempt 3/3)
2025-06-06 10:53:06 | WARNING | PID:18172 | Attempt 3 failed: Request failed with status 500: <!doctype html>
<html lang=en>
  <head>
    <title>RuntimeError: You called this URL via PATCH, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PATCH data. Change your form to point to 127.0.0.1:8000/message-service-api/ai-message/update/57dc902e-4449-4083-9b56-000000000002/aa952552-33d8-42ee-94df-c680b366e8fb/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css">
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script>
      var CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "JZuc5Nybhq6WZU27qjrX";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>RuntimeError</h1>
<div class="detail">
  <p class="errormsg">RuntimeError: You called this URL via PATCH, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PATCH data. Change your form to point to 127.0.0.1:8000/message-service-api/ai-message/update/57dc902e-4449-4083-9b56-000000000002/aa952552-33d8-42ee-94df-c680b366e8fb/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.
</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  <h3></h3>
  <ul><li><div class="frame" id="frame-2302078433232">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\contrib\staticfiles\handlers.py"</cite>,
      line <em class="line">80</em>,
      in <code class="function">__call__</code></h4>
  <div class="source "><pre class="line before"><span class="ws">        </span>self.base_url = urlparse(self.get_base_url())</pre>
<pre class="line before"><span class="ws">        </span>super().__init__()</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def __call__(self, environ, start_response):</pre>
<pre class="line before"><span class="ws">        </span>if not self._should_handle(get_path_info(environ)):</pre>
<pre class="line current"><span class="ws">            </span>return self.application(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>return super().__call__(environ, start_response)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span>class ASGIStaticFilesHandler(StaticFilesHandlerMixin, ASGIHandler):</pre>
<pre class="line after"><span class="ws">    </span>&#34;&#34;&#34;</pre></div>
</div>

<li><div class="frame" id="frame-2302078434912">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\wsgi.py"</cite>,
      line <em class="line">124</em>,
      in <code class="function">__call__</code></h4>
  <div class="source "><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def __call__(self, environ, start_response):</pre>
<pre class="line before"><span class="ws">        </span>set_script_prefix(get_script_name(environ))</pre>
<pre class="line before"><span class="ws">        </span>signals.request_started.send(sender=self.__class__, environ=environ)</pre>
<pre class="line before"><span class="ws">        </span>request = self.request_class(environ)</pre>
<pre class="line current"><span class="ws">        </span>response = self.get_response(request)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>response._handler_class = self.__class__</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>status = &#34;%d %s&#34; % (response.status_code, response.reason_phrase)</pre>
<pre class="line after"><span class="ws">        </span>response_headers = [</pre></div>
</div>

<li><div class="frame" id="frame-2302078427408">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\base.py"</cite>,
      line <em class="line">140</em>,
      in <code class="function">get_response</code></h4>
  <div class="source "><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def get_response(self, request):</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;Return an HttpResponse object for the given HttpRequest.&#34;&#34;&#34;</pre>
<pre class="line before"><span class="ws">        </span># Setup default url resolver for this thread</pre>
<pre class="line before"><span class="ws">        </span>set_urlconf(settings.ROOT_URLCONF)</pre>
<pre class="line current"><span class="ws">        </span>response = self._middleware_chain(request)</pre>
<pre class="line after"><span class="ws">        </span>response._resource_closers.append(request.close)</pre>
<pre class="line after"><span class="ws">        </span>if response.status_code &gt;= 400:</pre>
<pre class="line after"><span class="ws">            </span>log_response(</pre>
<pre class="line after"><span class="ws">                </span>&#34;%s: %s&#34;,</pre>
<pre class="line after"><span class="ws">                </span>response.reason_phrase,</pre></div>
</div>

<li><div class="frame" id="frame-2302078427296">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py"</cite>,
      line <em class="line">57</em>,
      in <code class="function">inner</code></h4>
  <div class="source "><pre class="line before"><span class="ws">        </span>@wraps(get_response)</pre>
<pre class="line before"><span class="ws">        </span>def inner(request):</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>response = get_response(request)</pre>
<pre class="line before"><span class="ws">            </span>except Exception as exc:</pre>
<pre class="line current"><span class="ws">                </span>response = response_for_exception(request, exc)</pre>
<pre class="line after"><span class="ws">            </span>return response</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>return inner</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span> </pre></div>
</div>

<li><div class="frame" id="frame-2302078432224">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py"</cite>,
      line <em class="line">140</em>,
      in <code class="function">response_for_exception</code></h4>
  <div class="source "><pre class="line before"><span class="ws">                </span>request, get_resolver(get_urlconf()), 400, exc</pre>
<pre class="line before"><span class="ws">            </span>)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>else:</pre>
<pre class="line before"><span class="ws">        </span>signals.got_request_exception.send(sender=None, request=request)</pre>
<pre class="line current"><span class="ws">        </span>response = handle_uncaught_exception(</pre>
<pre class="line after"><span class="ws">            </span>request, get_resolver(get_urlconf()), sys.exc_info()</pre>
<pre class="line after"><span class="ws">        </span>)</pre>
<pre class="line after"><span class="ws">        </span>log_response(</pre>
<pre class="line after"><span class="ws">            </span>&#34;%s: %s&#34;,</pre>
<pre class="line after"><span class="ws">            </span>response.reason_phrase,</pre></div>
</div>

<li><div class="frame" id="frame-2302078432560">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py"</cite>,
      line <em class="line">181</em>,
      in <code class="function">handle_uncaught_exception</code></h4>
  <div class="source "><pre class="line before"><span class="ws">    </span>&#34;&#34;&#34;</pre>
<pre class="line before"><span class="ws">    </span>if settings.DEBUG_PROPAGATE_EXCEPTIONS:</pre>
<pre class="line before"><span class="ws">        </span>raise</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>if settings.DEBUG:</pre>
<pre class="line current"><span class="ws">        </span>return debug.technical_500_response(request, *exc_info)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span># Return an HttpResponse that displays a friendly error message.</pre>
<pre class="line after"><span class="ws">    </span>callback = resolver.resolve_error_handler(500)</pre>
<pre class="line after"><span class="ws">    </span>return callback(request)</pre></div>
</div>

<li><div class="frame" id="frame-2302078429536">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django_extensions\management\technical_response.py"</cite>,
      line <em class="line">41</em>,
      in <code class="function">null_technical_500_response</code></h4>
  <div class="source "><pre class="line before"><span class="ws">    </span>try:</pre>
<pre class="line before"><span class="ws">        </span>if exc_value is None:</pre>
<pre class="line before"><span class="ws">            </span>exc_value = exc_type()</pre>
<pre class="line before"><span class="ws">        </span>if exc_value.__traceback__ is not tb:</pre>
<pre class="line before"><span class="ws">            </span>raise exc_value.with_traceback(tb)</pre>
<pre class="line current"><span class="ws">        </span>raise exc_value</pre>
<pre class="line after"><span class="ws">    </span>finally:</pre>
<pre class="line after"><span class="ws">        </span>exc_value = None</pre>
<pre class="line after"><span class="ws">        </span>tb = None</pre></div>
</div>

<li><div class="frame" id="frame-2302078432448">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py"</cite>,
      line <em class="line">55</em>,
      in <code class="function">inner</code></h4>
  <div class="source "><pre class="line before"><span class="ws">    </span>else:</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>@wraps(get_response)</pre>
<pre class="line before"><span class="ws">        </span>def inner(request):</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line current"><span class="ws">                </span>response = get_response(request)</pre>
<pre class="line after"><span class="ws">            </span>except Exception as exc:</pre>
<pre class="line after"><span class="ws">                </span>response = response_for_exception(request, exc)</pre>
<pre class="line after"><span class="ws">            </span>return response</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>return inner</pre></div>
</div>

<li><div class="frame" id="frame-2302078429984">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\corsheaders\middleware.py"</cite>,
      line <em class="line">56</em>,
      in <code class="function">__call__</code></h4>
  <div class="source "><pre class="line before"><span class="ws">    </span>) -&gt; HttpResponseBase | Awaitable[HttpResponseBase]:</pre>
<pre class="line before"><span class="ws">        </span>if self.async_mode:</pre>
<pre class="line before"><span class="ws">            </span>return self.__acall__(request)</pre>
<pre class="line before"><span class="ws">        </span>response: HttpResponseBase | None = self.check_preflight(request)</pre>
<pre class="line before"><span class="ws">        </span>if response is None:</pre>
<pre class="line current"><span class="ws">            </span>result = self.get_response(request)</pre>
<pre class="line after"><span class="ws">            </span>assert isinstance(result, HttpResponseBase)</pre>
<pre class="line after"><span class="ws">            </span>response = result</pre>
<pre class="line after"><span class="ws">        </span>self.add_response_headers(request, response)</pre>
<pre class="line after"><span class="ws">        </span>return response</pre>
<pre class="line after"><span class="ws"></span> </pre></div>
</div>

<li><div class="frame" id="frame-2302078432672">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py"</cite>,
      line <em class="line">57</em>,
      in <code class="function">inner</code></h4>
  <div class="source "><pre class="line before"><span class="ws">        </span>@wraps(get_response)</pre>
<pre class="line before"><span class="ws">        </span>def inner(request):</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>response = get_response(request)</pre>
<pre class="line before"><span class="ws">            </span>except Exception as exc:</pre>
<pre class="line current"><span class="ws">                </span>response = response_for_exception(request, exc)</pre>
<pre class="line after"><span class="ws">            </span>return response</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>return inner</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span> </pre></div>
</div>

<li><div class="frame" id="frame-2302078432784">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py"</cite>,
      line <em class="line">140</em>,
      in <code class="function">response_for_exception</code></h4>
  <div class="source "><pre class="line before"><span class="ws">                </span>request, get_resolver(get_urlconf()), 400, exc</pre>
<pre class="line before"><span class="ws">            </span>)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>else:</pre>
<pre class="line before"><span class="ws">        </span>signals.got_request_exception.send(sender=None, request=request)</pre>
<pre class="line current"><span class="ws">        </span>response = handle_uncaught_exception(</pre>
<pre class="line after"><span class="ws">            </span>request, get_resolver(get_urlconf()), sys.exc_info()</pre>
<pre class="line after"><span class="ws">        </span>)</pre>
<pre class="line after"><span class="ws">        </span>log_response(</pre>
<pre class="line after"><span class="ws">            </span>&#34;%s: %s&#34;,</pre>
<pre class="line after"><span class="ws">            </span>response.reason_phrase,</pre></div>
</div>

<li><div class="frame" id="frame-2302078433344">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py"</cite>,
      line <em class="line">181</em>,
      in <code class="function">handle_uncaught_exception</code></h4>
  <div class="source "><pre class="line before"><span class="ws">    </span>&#34;&#34;&#34;</pre>
<pre class="line before"><span class="ws">    </span>if settings.DEBUG_PROPAGATE_EXCEPTIONS:</pre>
<pre class="line before"><span class="ws">        </span>raise</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>if settings.DEBUG:</pre>
<pre class="line current"><span class="ws">        </span>return debug.technical_500_response(request, *exc_info)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span># Return an HttpResponse that displays a friendly error message.</pre>
<pre class="line after"><span class="ws">    </span>callback = resolver.resolve_error_handler(500)</pre>
<pre class="line after"><span class="ws">    </span>return callback(request)</pre></div>
</div>

<li><div class="frame" id="frame-2302078433456">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django_extensions\management\technical_response.py"</cite>,
      line <em class="line">41</em>,
      in <code class="function">null_technical_500_response</code></h4>
  <div class="source "><pre class="line before"><span class="ws">    </span>try:</pre>
<pre class="line before"><span class="ws">        </span>if exc_value is None:</pre>
<pre class="line before"><span class="ws">            </span>exc_value = exc_type()</pre>
<pre class="line before"><span class="ws">        </span>if exc_value.__traceback__ is not tb:</pre>
<pre class="line before"><span class="ws">            </span>raise exc_value.with_traceback(tb)</pre>
<pre class="line current"><span class="ws">        </span>raise exc_value</pre>
<pre class="line after"><span class="ws">    </span>finally:</pre>
<pre class="line after"><span class="ws">        </span>exc_value = None</pre>
<pre class="line after"><span class="ws">        </span>tb = None</pre></div>
</div>

<li><div class="frame" id="frame-2302078433568">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py"</cite>,
      line <em class="line">55</em>,
      in <code class="function">inner</code></h4>
  <div class="source "><pre class="line before"><span class="ws">    </span>else:</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>@wraps(get_response)</pre>
<pre class="line before"><span class="ws">        </span>def inner(request):</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line current"><span class="ws">                </span>response = get_response(request)</pre>
<pre class="line after"><span class="ws">            </span>except Exception as exc:</pre>
<pre class="line after"><span class="ws">                </span>response = response_for_exception(request, exc)</pre>
<pre class="line after"><span class="ws">            </span>return response</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>return inner</pre></div>
</div>

<li><div class="frame" id="frame-2302078433680">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\utils\deprecation.py"</cite>,
      line <em class="line">129</em>,
      in <code class="function">__call__</code></h4>
  <div class="source "><pre class="line before"><span class="ws">        </span>if self.async_mode:</pre>
<pre class="line before"><span class="ws">            </span>return self.__acall__(request)</pre>
<pre class="line before"><span class="ws">        </span>response = None</pre>
<pre class="line before"><span class="ws">        </span>if hasattr(self, &#34;process_request&#34;):</pre>
<pre class="line before"><span class="ws">            </span>response = self.process_request(request)</pre>
<pre class="line current"><span class="ws">        </span>response = response or self.get_response(request)</pre>
<pre class="line after"><span class="ws">        </span>if hasattr(self, &#34;process_response&#34;):</pre>
<pre class="line after"><span class="ws">            </span>response = self.process_response(request, response)</pre>
<pre class="line after"><span class="ws">        </span>return response</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>async def __acall__(self, request):</pre></div>
</div>

<li><div class="frame" id="frame-2302078433792">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py"</cite>,
      line <em class="line">57</em>,
      in <code class="function">inner</code></h4>
  <div class="source "><pre class="line before"><span class="ws">        </span>@wraps(get_response)</pre>
<pre class="line before"><span class="ws">        </span>def inner(request):</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>response = get_response(request)</pre>
<pre class="line before"><span class="ws">            </span>except Exception as exc:</pre>
<pre class="line current"><span class="ws">                </span>response = response_for_exception(request, exc)</pre>
<pre class="line after"><span class="ws">            </span>return response</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>return inner</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span> </pre></div>
</div>

<li><div class="frame" id="frame-2302078433904">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py"</cite>,
      line <em class="line">140</em>,
      in <code class="function">response_for_exception</code></h4>
  <div class="source "><pre class="line before"><span class="ws">                </span>request, get_resolver(get_urlconf()), 400, exc</pre>
<pre class="line before"><span class="ws">            </span>)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>else:</pre>
<pre class="line before"><span class="ws">        </span>signals.got_request_exception.send(sender=None, request=request)</pre>
<pre class="line current"><span class="ws">        </span>response = handle_uncaught_exception(</pre>
<pre class="line after"><span class="ws">            </span>request, get_resolver(get_urlconf()), sys.exc_info()</pre>
<pre class="line after"><span class="ws">        </span>)</pre>
<pre class="line after"><span class="ws">        </span>log_response(</pre>
<pre class="line after"><span class="ws">            </span>&#34;%s: %s&#34;,</pre>
<pre class="line after"><span class="ws">            </span>response.reason_phrase,</pre></div>
</div>

<li><div class="frame" id="frame-2302078434016">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py"</cite>,
      line <em class="line">181</em>,
      in <code class="function">handle_uncaught_exception</code></h4>
  <div class="source "><pre class="line before"><span class="ws">    </span>&#34;&#34;&#34;</pre>
<pre class="line before"><span class="ws">    </span>if settings.DEBUG_PROPAGATE_EXCEPTIONS:</pre>
<pre class="line before"><span class="ws">        </span>raise</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>if settings.DEBUG:</pre>
<pre class="line current"><span class="ws">        </span>return debug.technical_500_response(request, *exc_info)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span># Return an HttpResponse that displays a friendly error message.</pre>
<pre class="line after"><span class="ws">    </span>callback = resolver.resolve_error_handler(500)</pre>
<pre class="line after"><span class="ws">    </span>return callback(request)</pre></div>
</div>

<li><div class="frame" id="frame-2302078432336">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django_extensions\management\technical_response.py"</cite>,
      line <em class="line">41</em>,
      in <code class="function">null_technical_500_response</code></h4>
  <div class="source "><pre class="line before"><span class="ws">    </span>try:</pre>
<pre class="line before"><span class="ws">        </span>if exc_value is None:</pre>
<pre class="line before"><span class="ws">            </span>exc_value = exc_type()</pre>
<pre class="line before"><span class="ws">        </span>if exc_value.__traceback__ is not tb:</pre>
<pre class="line before"><span class="ws">            </span>raise exc_value.with_traceback(tb)</pre>
<pre class="line current"><span class="ws">        </span>raise exc_value</pre>
<pre class="line after"><span class="ws">    </span>finally:</pre>
<pre class="line after"><span class="ws">        </span>exc_value = None</pre>
<pre class="line after"><span class="ws">        </span>tb = None</pre></div>
</div>

<li><div class="frame" id="frame-2302078432000">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py"</cite>,
      line <em class="line">55</em>,
      in <code class="function">inner</code></h4>
  <div class="source "><pre class="line before"><span class="ws">    </span>else:</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>@wraps(get_response)</pre>
<pre class="line before"><span class="ws">        </span>def inner(request):</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line current"><span class="ws">                </span>response = get_response(request)</pre>
<pre class="line after"><span class="ws">            </span>except Exception as exc:</pre>
<pre class="line after"><span class="ws">                </span>response = response_for_exception(request, exc)</pre>
<pre class="line after"><span class="ws">            </span>return response</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>return inner</pre></div>
</div>

<li><div class="frame" id="frame-2302078432112">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\utils\deprecation.py"</cite>,
      line <em class="line">129</em>,
      in <code class="function">__call__</code></h4>
  <div class="source "><pre class="line before"><span class="ws">        </span>if self.async_mode:</pre>
<pre class="line before"><span class="ws">            </span>return self.__acall__(request)</pre>
<pre class="line before"><span class="ws">        </span>response = None</pre>
<pre class="line before"><span class="ws">        </span>if hasattr(self, &#34;process_request&#34;):</pre>
<pre class="line before"><span class="ws">            </span>response = self.process_request(request)</pre>
<pre class="line current"><span class="ws">        </span>response = response or self.get_response(request)</pre>
<pre class="line after"><span class="ws">        </span>if hasattr(self, &#34;process_response&#34;):</pre>
<pre class="line after"><span class="ws">            </span>response = self.process_response(request, response)</pre>
<pre class="line after"><span class="ws">        </span>return response</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>async def __acall__(self, request):</pre></div>
</div>

<li><div class="frame" id="frame-2302078434128">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py"</cite>,
      line <em class="line">57</em>,
      in <code class="function">inner</code></h4>
  <div class="source "><pre class="line before"><span class="ws">        </span>@wraps(get_response)</pre>
<pre class="line before"><span class="ws">        </span>def inner(request):</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>response = get_response(request)</pre>
<pre class="line before"><span class="ws">            </span>except Exception as exc:</pre>
<pre class="line current"><span class="ws">                </span>response = response_for_exception(request, exc)</pre>
<pre class="line after"><span class="ws">            </span>return response</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>return inner</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span> </pre></div>
</div>

<li><div class="frame" id="frame-2302078434240">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py"</cite>,
      line <em class="line">140</em>,
      in <code class="function">response_for_exception</code></h4>
  <div class="source "><pre class="line before"><span class="ws">                </span>request, get_resolver(get_urlconf()), 400, exc</pre>
<pre class="line before"><span class="ws">            </span>)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>else:</pre>
<pre class="line before"><span class="ws">        </span>signals.got_request_exception.send(sender=None, request=request)</pre>
<pre class="line current"><span class="ws">        </span>response = handle_uncaught_exception(</pre>
<pre class="line after"><span class="ws">            </span>request, get_resolver(get_urlconf()), sys.exc_info()</pre>
<pre class="line after"><span class="ws">        </span>)</pre>
<pre class="line after"><span class="ws">        </span>log_response(</pre>
<pre class="line after"><span class="ws">            </span>&#34;%s: %s&#34;,</pre>
<pre class="line after"><span class="ws">            </span>response.reason_phrase,</pre></div>
</div>

<li><div class="frame" id="frame-2302078434352">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py"</cite>,
      line <em class="line">181</em>,
      in <code class="function">handle_uncaught_exception</code></h4>
  <div class="source "><pre class="line before"><span class="ws">    </span>&#34;&#34;&#34;</pre>
<pre class="line before"><span class="ws">    </span>if settings.DEBUG_PROPAGATE_EXCEPTIONS:</pre>
<pre class="line before"><span class="ws">        </span>raise</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>if settings.DEBUG:</pre>
<pre class="line current"><span class="ws">        </span>return debug.technical_500_response(request, *exc_info)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span># Return an HttpResponse that displays a friendly error message.</pre>
<pre class="line after"><span class="ws">    </span>callback = resolver.resolve_error_handler(500)</pre>
<pre class="line after"><span class="ws">    </span>return callback(request)</pre></div>
</div>

<li><div class="frame" id="frame-2302078434464">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django_extensions\management\technical_response.py"</cite>,
      line <em class="line">41</em>,
      in <code class="function">null_technical_500_response</code></h4>
  <div class="source "><pre class="line before"><span class="ws">    </span>try:</pre>
<pre class="line before"><span class="ws">        </span>if exc_value is None:</pre>
<pre class="line before"><span class="ws">            </span>exc_value = exc_type()</pre>
<pre class="line before"><span class="ws">        </span>if exc_value.__traceback__ is not tb:</pre>
<pre class="line before"><span class="ws">            </span>raise exc_value.with_traceback(tb)</pre>
<pre class="line current"><span class="ws">        </span>raise exc_value</pre>
<pre class="line after"><span class="ws">    </span>finally:</pre>
<pre class="line after"><span class="ws">        </span>exc_value = None</pre>
<pre class="line after"><span class="ws">        </span>tb = None</pre></div>
</div>

<li><div class="frame" id="frame-2302078434576">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py"</cite>,
      line <em class="line">55</em>,
      in <code class="function">inner</code></h4>
  <div class="source "><pre class="line before"><span class="ws">    </span>else:</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>@wraps(get_response)</pre>
<pre class="line before"><span class="ws">        </span>def inner(request):</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line current"><span class="ws">                </span>response = get_response(request)</pre>
<pre class="line after"><span class="ws">            </span>except Exception as exc:</pre>
<pre class="line after"><span class="ws">                </span>response = response_for_exception(request, exc)</pre>
<pre class="line after"><span class="ws">            </span>return response</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>return inner</pre></div>
</div>

<li><div class="frame" id="frame-2302078434688">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\utils\deprecation.py"</cite>,
      line <em class="line">131</em>,
      in <code class="function">__call__</code></h4>
  <div class="source "><pre class="line before"><span class="ws">        </span>response = None</pre>
<pre class="line before"><span class="ws">        </span>if hasattr(self, &#34;process_request&#34;):</pre>
<pre class="line before"><span class="ws">            </span>response = self.process_request(request)</pre>
<pre class="line before"><span class="ws">        </span>response = response or self.get_response(request)</pre>
<pre class="line before"><span class="ws">        </span>if hasattr(self, &#34;process_response&#34;):</pre>
<pre class="line current"><span class="ws">            </span>response = self.process_response(request, response)</pre>
<pre class="line after"><span class="ws">        </span>return response</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>async def __acall__(self, request):</pre>
<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line after"><span class="ws">        </span>Async version of __call__ that is swapped in when an async request</pre></div>
</div>

<li><div class="frame" id="frame-2302078434800">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\middleware\common.py"</cite>,
      line <em class="line">108</em>,
      in <code class="function">process_response</code></h4>
  <div class="source "><pre class="line before"><span class="ws">        </span>with an appended slash if should_redirect_with_slash() returns True.</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line before"><span class="ws">        </span># If the given URL is &#34;Not Found&#34;, then check if we should redirect to</pre>
<pre class="line before"><span class="ws">        </span># a path with a slash appended.</pre>
<pre class="line before"><span class="ws">        </span>if response.status_code == 404 and self.should_redirect_with_slash(request):</pre>
<pre class="line current"><span class="ws">            </span>return self.response_redirect_class(self.get_full_path_with_slash(request))</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span># Add the Content-Length header to non-streaming responses if not</pre>
<pre class="line after"><span class="ws">        </span># already set.</pre>
<pre class="line after"><span class="ws">        </span>if not response.streaming and not response.has_header(&#34;Content-Length&#34;):</pre>
<pre class="line after"><span class="ws">            </span>response.headers[&#34;Content-Length&#34;] = str(len(response.content))</pre></div>
</div>

<li><div class="frame" id="frame-2302078429088">
  <h4>File <cite class="filename">"C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\middleware\common.py"</cite>,
      line <em class="line">87</em>,
      in <code class="function">get_full_path_with_slash</code></h4>
  <div class="source "><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line before"><span class="ws">        </span>new_path = request.get_full_path(force_append_slash=True)</pre>
<pre class="line before"><span class="ws">        </span># Prevent construction of scheme relative urls.</pre>
<pre class="line before"><span class="ws">        </span>new_path = escape_leading_slashes(new_path)</pre>
<pre class="line before"><span class="ws">        </span>if settings.DEBUG and request.method in (&#34;DELETE&#34;, &#34;POST&#34;, &#34;PUT&#34;, &#34;PATCH&#34;):</pre>
<pre class="line current"><span class="ws">            </span>raise RuntimeError(</pre>
<pre class="line after"><span class="ws">                </span>&#34;You called this URL via %(method)s, but the URL doesn&#39;t end &#34;</pre>
<pre class="line after"><span class="ws">                </span>&#34;in a slash and you have APPEND_SLASH set. Django can&#39;t &#34;</pre>
<pre class="line after"><span class="ws">                </span>&#34;redirect to the slash URL while maintaining %(method)s data. &#34;</pre>
<pre class="line after"><span class="ws">                </span>&#34;Change your form to point to %(url)s (note the trailing &#34;</pre>
<pre class="line after"><span class="ws">                </span>&#34;slash), or set APPEND_SLASH=False in your Django settings.&#34;</pre></div>
</div>
</ul>
  <blockquote>RuntimeError: You called this URL via PATCH, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PATCH data. Change your form to point to 127.0.0.1:8000/message-service-api/ai-message/update/57dc902e-4449-4083-9b56-000000000002/aa952552-33d8-42ee-94df-c680b366e8fb/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.
</blockquote>
</div>

<div class="plain">
    <p>
      This is the Copy/Paste friendly version of the traceback.
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\contrib\staticfiles\handlers.py&#34;, line 80, in __call__
    return self.application(environ, start_response)
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\wsgi.py&#34;, line 124, in __call__
    response = self.get_response(request)
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\base.py&#34;, line 140, in get_response
    response = self._middleware_chain(request)
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py&#34;, line 57, in inner
    response = response_for_exception(request, exc)
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py&#34;, line 140, in response_for_exception
    response = handle_uncaught_exception(
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py&#34;, line 181, in handle_uncaught_exception
    return debug.technical_500_response(request, *exc_info)
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django_extensions\management\technical_response.py&#34;, line 41, in null_technical_500_response
    raise exc_value
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py&#34;, line 55, in inner
    response = get_response(request)
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\corsheaders\middleware.py&#34;, line 56, in __call__
    result = self.get_response(request)
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py&#34;, line 57, in inner
    response = response_for_exception(request, exc)
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py&#34;, line 140, in response_for_exception
    response = handle_uncaught_exception(
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py&#34;, line 181, in handle_uncaught_exception
    return debug.technical_500_response(request, *exc_info)
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django_extensions\management\technical_response.py&#34;, line 41, in null_technical_500_response
    raise exc_value
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py&#34;, line 55, in inner
    response = get_response(request)
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\utils\deprecation.py&#34;, line 129, in __call__
    response = response or self.get_response(request)
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py&#34;, line 57, in inner
    response = response_for_exception(request, exc)
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py&#34;, line 140, in response_for_exception
    response = handle_uncaught_exception(
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py&#34;, line 181, in handle_uncaught_exception
    return debug.technical_500_response(request, *exc_info)
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django_extensions\management\technical_response.py&#34;, line 41, in null_technical_500_response
    raise exc_value
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py&#34;, line 55, in inner
    response = get_response(request)
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\utils\deprecation.py&#34;, line 129, in __call__
    response = response or self.get_response(request)
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py&#34;, line 57, in inner
    response = response_for_exception(request, exc)
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py&#34;, line 140, in response_for_exception
    response = handle_uncaught_exception(
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py&#34;, line 181, in handle_uncaught_exception
    return debug.technical_500_response(request, *exc_info)
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django_extensions\management\technical_response.py&#34;, line 41, in null_technical_500_response
    raise exc_value
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py&#34;, line 55, in inner
    response = get_response(request)
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\utils\deprecation.py&#34;, line 131, in __call__
    response = self.process_response(request, response)
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\middleware\common.py&#34;, line 108, in process_response
    return self.response_redirect_class(self.get_full_path_with_slash(request))
  File &#34;C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\middleware\common.py&#34;, line 87, in get_full_path_with_slash
    raise RuntimeError(
RuntimeError: You called this URL via PATCH, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PATCH data. Change your form to point to 127.0.0.1:8000/message-service-api/ai-message/update/57dc902e-4449-4083-9b56-000000000002/aa952552-33d8-42ee-94df-c680b366e8fb/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.
</textarea>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\contrib\staticfiles\handlers.py", line 80, in __call__
    return self.application(environ, start_response)
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\wsgi.py", line 124, in __call__
    response = self.get_response(request)
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\base.py", line 140, in get_response
    response = self._middleware_chain(request)
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py", line 57, in inner
    response = response_for_exception(request, exc)
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py", line 140, in response_for_exception
    response = handle_uncaught_exception(
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py", line 181, in handle_uncaught_exception
    return debug.technical_500_response(request, *exc_info)
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django_extensions\management\technical_response.py", line 41, in null_technical_500_response
    raise exc_value
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\corsheaders\middleware.py", line 56, in __call__
    result = self.get_response(request)
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py", line 57, in inner
    response = response_for_exception(request, exc)
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py", line 140, in response_for_exception
    response = handle_uncaught_exception(
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py", line 181, in handle_uncaught_exception
    return debug.technical_500_response(request, *exc_info)
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django_extensions\management\technical_response.py", line 41, in null_technical_500_response
    raise exc_value
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\utils\deprecation.py", line 129, in __call__
    response = response or self.get_response(request)
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py", line 57, in inner
    response = response_for_exception(request, exc)
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py", line 140, in response_for_exception
    response = handle_uncaught_exception(
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py", line 181, in handle_uncaught_exception
    return debug.technical_500_response(request, *exc_info)
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django_extensions\management\technical_response.py", line 41, in null_technical_500_response
    raise exc_value
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\utils\deprecation.py", line 129, in __call__
    response = response or self.get_response(request)
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py", line 57, in inner
    response = response_for_exception(request, exc)
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py", line 140, in response_for_exception
    response = handle_uncaught_exception(
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py", line 181, in handle_uncaught_exception
    return debug.technical_500_response(request, *exc_info)
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django_extensions\management\technical_response.py", line 41, in null_technical_500_response
    raise exc_value
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\utils\deprecation.py", line 131, in __call__
    response = self.process_response(request, response)
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\middleware\common.py", line 108, in process_response
    return self.response_redirect_class(self.get_full_path_with_slash(request))
  File "C:\Users\DELL\Desktop\botxbyte\0-Article Innovator\articleInnovator\.venv\lib\site-packages\django\middleware\common.py", line 87, in get_full_path_with_slash
    raise RuntimeError(
RuntimeError: You called this URL via PATCH, but the URL doesn't end in a slash and you have APPEND_SLASH set. Django can't redirect to the slash URL while maintaining PATCH data. Change your form to point to 127.0.0.1:8000/message-service-api/ai-message/update/57dc902e-4449-4083-9b56-000000000002/aa952552-33d8-42ee-94df-c680b366e8fb/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.


-->

2025-06-06 10:53:06 | INFO | PID:18172 | xxxxxxxxxxxxxxxxxxxxxxxxx url_rewriter_para_response_worker xxxxxxxxxxxxxxxxxxxxxxxxx
2025-06-06 10:53:06 | INFO | PID:18172 | Message processed in 7.90 seconds
2025-06-06 10:53:06 | INFO | PID:18172 | Message acknowledged
2025-06-06 10:53:11 | WARNING | PID:18172 | No open connection/channel: connecting...
2025-06-06 10:53:11 | INFO | PID:18172 | Successfully connected on attempt 1
2025-06-06 10:53:11 | INFO | PID:18172 | Consumer registered on queue: article-output-queue
2025-06-06 10:53:11 | INFO | PID:18172 | Starting consuming on article-output-queue
2025-06-06 10:55:52 | INFO | PID:33192 | Starting worker url_rewriter_para_response_worker for queue article-output-queue
2025-06-06 10:55:52 | INFO | PID:33192 | Created new channel
2025-06-06 10:55:52 | INFO | PID:33192 | Declared queue: article-output-queue
2025-06-06 10:55:53 | INFO | PID:33192 | Available workers: ['testworker', 'url_rewriter_para_response_worker', 'url_rewriter_para_worker']
2025-06-06 10:55:53 | INFO | PID:33192 | Found worker class: UrlRewriterParallelWorker
2025-06-06 10:55:53 | WARNING | PID:33192 | Detected localhost connection - disabling SSL verification for development
2025-06-06 10:55:53 | WARNING | PID:33192 | ⚠️  SSL verification is disabled - DO NOT use this in production!
2025-06-06 10:55:53 | INFO | PID:33192 | Worker instance created
2025-06-06 10:55:53 | INFO | PID:33192 | Registered worker process 33192 in registry
2025-06-06 10:55:53 | INFO | PID:33192 | Starting consuming on article-output-queue
2025-06-06 10:55:53 | INFO | PID:33192 | Started url_rewriter_para_response_worker on queue: article-output-queue
2025-06-06 10:55:53 | INFO | PID:33192 | Started url_rewriter_para_response_worker with PID: 33192, queue: article-output-queue
2025-06-06 10:55:58 | WARNING | PID:33192 | No open connection/channel: connecting...
2025-06-06 10:55:58 | INFO | PID:33192 | Successfully connected on attempt 1
2025-06-06 10:55:58 | INFO | PID:33192 | Consumer registered on queue: article-output-queue
2025-06-06 10:55:58 | INFO | PID:33192 | Starting consuming on article-output-queue
2025-06-06 10:56:14 | INFO | PID:33192 | Processing message from queue: article-output-queue
2025-06-06 10:56:14 | INFO | PID:33192 | Processing message: {'message': {'prompt': 'What is the capital of Idian?', 'content': "I need to know about India's capital city.", 'workspace_id': '57dc902e-4449-4083-9b56-000000000004', 'model': 'gpt-4', 'system_prompt': 'You are a helpful assistant.', 'sequence_index': 1, 'html_tag': 'p', 'response_format': 'json', 'article_id': '57dc902e-4449-4083-9b56-000000000002', 'message_id': 'aa952552-33d8-42ee-94df-c680b366e8fb', 'article_message_count': 10, 'use_simulation': False}, 'timestamp': '2025-06-06T10:56:14.367559', 'message_id': 'ce1aa4fa-72c4-4b27-8d58-57a9f12f1781'}
2025-06-06 10:56:14 | INFO | PID:33192 | Making update request to endpoint: /message-service-api/ai-message/update/57dc902e-4449-4083-9b56-000000000002/aa952552-33d8-42ee-94df-c680b366e8fb/
2025-06-06 10:56:15 | INFO | PID:33192 | Successfully authenticated with API
2025-06-06 10:56:15 | INFO | PID:33192 | Making PATCH request to /message-service-api/ai-message/update/57dc902e-4449-4083-9b56-000000000002/aa952552-33d8-42ee-94df-c680b366e8fb/ (Attempt 1/3)
2025-06-06 10:56:16 | WARNING | PID:33192 | Attempt 1 failed: Request failed with status 404: {"error": "AI message not found.", "success": false}
2025-06-06 10:56:18 | INFO | PID:33192 | Making PATCH request to /message-service-api/ai-message/update/57dc902e-4449-4083-9b56-000000000002/aa952552-33d8-42ee-94df-c680b366e8fb/ (Attempt 2/3)
2025-06-06 10:56:18 | WARNING | PID:33192 | Attempt 2 failed: Request failed with status 404: {"error": "AI message not found.", "success": false}
2025-06-06 10:56:20 | INFO | PID:33192 | Making PATCH request to /message-service-api/ai-message/update/57dc902e-4449-4083-9b56-000000000002/aa952552-33d8-42ee-94df-c680b366e8fb/ (Attempt 3/3)
2025-06-06 10:56:21 | WARNING | PID:33192 | Attempt 3 failed: Request failed with status 404: {"error": "AI message not found.", "success": false}
2025-06-06 10:56:21 | INFO | PID:33192 | xxxxxxxxxxxxxxxxxxxxxxxxx url_rewriter_para_response_worker xxxxxxxxxxxxxxxxxxxxxxxxx
2025-06-06 10:56:21 | INFO | PID:33192 | Message processed in 6.82 seconds
2025-06-06 10:56:21 | INFO | PID:33192 | Message acknowledged
2025-06-06 10:56:26 | WARNING | PID:33192 | No open connection/channel: connecting...
2025-06-06 10:56:26 | INFO | PID:33192 | Successfully connected on attempt 1
2025-06-06 10:56:26 | INFO | PID:33192 | Consumer registered on queue: article-output-queue
2025-06-06 10:56:26 | INFO | PID:33192 | Starting consuming on article-output-queue
2025-06-06 10:57:08 | INFO | PID:33192 | Processing message from queue: article-output-queue
2025-06-06 10:57:08 | INFO | PID:33192 | Processing message: {'message': {'prompt': 'What is the capital of Idian?', 'content': "I need to know about India's capital city.", 'workspace_id': '57dc902e-4449-4083-9b56-000000000004', 'model': 'gpt-4', 'system_prompt': 'You are a helpful assistant.', 'sequence_index': 1, 'html_tag': 'p', 'response_format': 'json', 'article_id': '123', 'message_id': '321', 'article_message_count': 10, 'use_simulation': False}, 'timestamp': '2025-06-06T10:57:08.690663', 'message_id': '9837a826-6ba9-4d33-8c36-23f41d56398a'}
2025-06-06 10:57:08 | INFO | PID:33192 | Making update request to endpoint: /message-service-api/ai-message/update/123/321/
2025-06-06 10:57:08 | INFO | PID:33192 | Making PATCH request to /message-service-api/ai-message/update/123/321/ (Attempt 1/3)
2025-06-06 10:57:09 | WARNING | PID:33192 | Attempt 1 failed: Request failed with status 400: {"error": "Invalid data.", "errors": {"article_message_total_count": ["This field may not be null."], "ai_response": ["Not a valid string."], "ai_response_status": ["This field may not be null."]}, "success": false}
2025-06-06 10:57:11 | INFO | PID:33192 | Making PATCH request to /message-service-api/ai-message/update/123/321/ (Attempt 2/3)
2025-06-06 10:57:11 | WARNING | PID:33192 | Attempt 2 failed: Request failed with status 400: {"error": "Invalid data.", "errors": {"article_message_total_count": ["This field may not be null."], "ai_response": ["Not a valid string."], "ai_response_status": ["This field may not be null."]}, "success": false}
2025-06-06 10:57:13 | INFO | PID:33192 | Making PATCH request to /message-service-api/ai-message/update/123/321/ (Attempt 3/3)
2025-06-06 10:57:14 | WARNING | PID:33192 | Attempt 3 failed: Request failed with status 400: {"error": "Invalid data.", "errors": {"article_message_total_count": ["This field may not be null."], "ai_response": ["Not a valid string."], "ai_response_status": ["This field may not be null."]}, "success": false}
2025-06-06 10:57:14 | INFO | PID:33192 | xxxxxxxxxxxxxxxxxxxxxxxxx url_rewriter_para_response_worker xxxxxxxxxxxxxxxxxxxxxxxxx
2025-06-06 10:57:14 | INFO | PID:33192 | Message processed in 5.29 seconds
2025-06-06 10:57:14 | INFO | PID:33192 | Message acknowledged
2025-06-06 10:57:19 | WARNING | PID:33192 | No open connection/channel: connecting...
2025-06-06 10:57:19 | INFO | PID:33192 | Successfully connected on attempt 1
2025-06-06 10:57:19 | INFO | PID:33192 | Consumer registered on queue: article-output-queue
2025-06-06 10:57:19 | INFO | PID:33192 | Starting consuming on article-output-queue
2025-06-06 11:07:31 | INFO | PID:31100 | Starting worker url_rewriter_para_response_worker for queue article-output-queue
2025-06-06 11:07:31 | INFO | PID:31100 | Created new channel
2025-06-06 11:07:31 | INFO | PID:31100 | Declared queue: article-output-queue
2025-06-06 11:07:31 | INFO | PID:31100 | Available workers: ['testworker', 'url_rewriter_para_response_worker', 'url_rewriter_para_worker']
2025-06-06 11:07:31 | INFO | PID:31100 | Found worker class: UrlRewriterParallelWorker
2025-06-06 11:07:31 | WARNING | PID:31100 | Detected localhost connection - disabling SSL verification for development
2025-06-06 11:07:31 | WARNING | PID:31100 | ⚠️  SSL verification is disabled - DO NOT use this in production!
2025-06-06 11:07:31 | INFO | PID:31100 | Worker instance created
2025-06-06 11:07:31 | INFO | PID:31100 | Registered worker process 31100 in registry
2025-06-06 11:07:31 | INFO | PID:31100 | Starting consuming on article-output-queue
2025-06-06 11:07:32 | INFO | PID:31100 | Started url_rewriter_para_response_worker on queue: article-output-queue
2025-06-06 11:07:32 | INFO | PID:31100 | Started url_rewriter_para_response_worker with PID: 31100, queue: article-output-queue
2025-06-06 11:07:36 | WARNING | PID:31100 | No open connection/channel: connecting...
2025-06-06 11:07:36 | INFO | PID:31100 | Successfully connected on attempt 1
2025-06-06 11:07:36 | INFO | PID:31100 | Consumer registered on queue: article-output-queue
2025-06-06 11:07:36 | INFO | PID:31100 | Starting consuming on article-output-queue
2025-06-06 11:08:00 | INFO | PID:31100 | Processing message from queue: article-output-queue
2025-06-06 11:08:00 | INFO | PID:31100 | Processing message: {'message': {'prompt': 'What is the capital of Idian?', 'content': "I need to know about India's capital city.", 'workspace_id': '57dc902e-4449-4083-9b56-000000000004', 'model': 'gpt-4', 'system_prompt': 'You are a helpful assistant.', 'sequence_index': 1, 'html_tag': 'p', 'response_format': 'json', 'article_id': '123', 'message_id': '321', 'article_message_count': 10, 'article_message_total_count': 1, 'use_simulation': False}, 'timestamp': '2025-06-06T11:07:59.823540', 'message_id': 'a63e66ba-5529-416b-8912-65338b4e456e'}
2025-06-06 11:08:00 | INFO | PID:31100 | Making update request to endpoint: /message-service-api/ai-message/update/123/321/
2025-06-06 11:08:01 | INFO | PID:31100 | Successfully authenticated with API
2025-06-06 11:08:01 | INFO | PID:31100 | Making PATCH request to /message-service-api/ai-message/update/123/321/ (Attempt 1/3)
2025-06-06 11:08:02 | INFO | PID:31100 | xxxxxxxxxxxxxxxxxxxxxxxxx url_rewriter_para_response_worker xxxxxxxxxxxxxxxxxxxxxxxxx
2025-06-06 11:08:02 | INFO | PID:31100 | Message processed in 2.37 seconds
2025-06-06 11:08:02 | INFO | PID:31100 | Message acknowledged
2025-06-06 11:08:07 | WARNING | PID:31100 | No open connection/channel: connecting...
2025-06-06 11:08:07 | INFO | PID:31100 | Successfully connected on attempt 1
2025-06-06 11:08:07 | INFO | PID:31100 | Consumer registered on queue: article-output-queue
2025-06-06 11:08:07 | INFO | PID:31100 | Starting consuming on article-output-queue
